schema  { query: query_root mutation: mutation_root subscription: subscription_root }

scalar float8

scalar timestamp

type __Directive { args: __InputValue
    description: String!
    isRepeatable: String!
    locations: String!
    name: String!
}

type __EnumValue { deprecationReason: String!
    description: String!
    isDeprecated: String!
    name: String!
}

type __Field { args: __InputValue
    deprecationReason: String!
    description: String!
    isDeprecated: String!
    name: String!
    type: __Type
}

type __InputValue { defaultValue: String!
    description: String!
    name: String!
    type: __Type
}

type __Schema { description: String!
    directives: __Directive
    mutationType: __Type
    queryType: __Type
    subscriptionType: __Type
    types: __Type
}

type __Type { description: String!
    enumValues(includeDeprecated: Boolean = false): __EnumValue
    fields(includeDeprecated: Boolean = false): __Field
    inputFields: __InputValue
    interfaces: __Type
    kind: __TypeKind!
    name: String!
    ofType: __Type
    possibleTypes: __Type
}

type query_root { "An aggregate relationship"
rss_feeds_aggregate("filter the rows returned"
where: rss_feeds_bool_exp, "sort the rows by one or more columns"
order_by: [rss_feeds_order_by!], "limit the number of rows returned"
limit: Int, "skip the first n rows. Use only with order_by"
offset: Int, "distinct select on columns"
distinct_on: [rss_feeds_select_column!]): rss_feeds_aggregate!
    "An aggregate relationship"
    stories_aggregate("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): stories_aggregate!
    "An aggregate relationship"
    story_companies_aggregate("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): story_companies_aggregate!
    "An aggregate relationship"
    story_industries_aggregate("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): story_industries_aggregate!
    "An aggregate relationship"
    story_locations_aggregate("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): story_locations_aggregate!
    "An aggregate relationship"
    story_people_aggregate("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): story_people_aggregate!
    "An aggregate relationship"
    story_skills_aggregate("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): story_skills_aggregate!
    "An aggregate relationship"
    story_tags_aggregate("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): story_tags_aggregate!
    "An aggregate relationship"
    story_thumbnails_aggregate("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): story_thumbnails_aggregate!
    "An aggregate relationship"
    tag_companies_aggregate("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): tag_companies_aggregate!
    "An aggregate relationship"
    tag_industries_aggregate("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): tag_industries_aggregate!
    "An aggregate relationship"
    tag_people_aggregate("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): tag_people_aggregate!
    "An aggregate relationship"
    tag_rss_feeds_aggregate("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): tag_rss_feeds_aggregate!
    "An aggregate relationship"
    tag_stories_aggregate("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): tag_stories_aggregate!
    "An array relationship"
    rss_feeds("filter the rows returned"
    where: rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [rss_feeds_select_column!]): [rss_feeds!]!
    "An array relationship"
    stories("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): [stories!]!
    "An array relationship"
    story_companies("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): [story_companies!]!
    "An array relationship"
    story_industries("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): [story_industries!]!
    "An array relationship"
    story_locations("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): [story_locations!]!
    "An array relationship"
    story_people("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): [story_people!]!
    "An array relationship"
    story_skills("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): [story_skills!]!
    "An array relationship"
    story_tags("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): [story_tags!]!
    "An array relationship"
    story_thumbnails("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): [story_thumbnails!]!
    "An array relationship"
    tag_companies("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): [tag_companies!]!
    "An array relationship"
    tag_industries("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): [tag_industries!]!
    "An array relationship"
    tag_people("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): [tag_people!]!
    "An array relationship"
    tag_rss_feeds("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): [tag_rss_feeds!]!
    "An array relationship"
    tag_stories("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): [tag_stories!]!
    "fetch aggregated fields from the table: \"authors\""
    authors_aggregate("filter the rows returned"
    where: authors_bool_exp, "sort the rows by one or more columns"
    order_by: [authors_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [authors_select_column!]): authors_aggregate!
    "fetch aggregated fields from the table: \"companies\""
    companies_aggregate("filter the rows returned"
    where: companies_bool_exp, "sort the rows by one or more columns"
    order_by: [companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [companies_select_column!]): companies_aggregate!
    "fetch aggregated fields from the table: \"industries\""
    industries_aggregate("filter the rows returned"
    where: industries_bool_exp, "sort the rows by one or more columns"
    order_by: [industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [industries_select_column!]): industries_aggregate!
    "fetch aggregated fields from the table: \"locations\""
    locations_aggregate("filter the rows returned"
    where: locations_bool_exp, "sort the rows by one or more columns"
    order_by: [locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [locations_select_column!]): locations_aggregate!
    "fetch aggregated fields from the table: \"people\""
    people_aggregate("filter the rows returned"
    where: people_bool_exp, "sort the rows by one or more columns"
    order_by: [people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [people_select_column!]): people_aggregate!
    "fetch aggregated fields from the table: \"skills\""
    skills_aggregate("filter the rows returned"
    where: skills_bool_exp, "sort the rows by one or more columns"
    order_by: [skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [skills_select_column!]): skills_aggregate!
    "fetch aggregated fields from the table: \"sources\""
    sources_aggregate("filter the rows returned"
    where: sources_bool_exp, "sort the rows by one or more columns"
    order_by: [sources_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [sources_select_column!]): sources_aggregate!
    "fetch aggregated fields from the table: \"tags\""
    tags_aggregate("filter the rows returned"
    where: tags_bool_exp, "sort the rows by one or more columns"
    order_by: [tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tags_select_column!]): tags_aggregate!
    "fetch data from the table: \"authors\""
    authors("filter the rows returned"
    where: authors_bool_exp, "sort the rows by one or more columns"
    order_by: [authors_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [authors_select_column!]): [authors!]!
    "fetch data from the table: \"authors\" using primary key columns"
    authors_by_pk(id: Int!): authors
    "fetch data from the table: \"companies\""
    companies("filter the rows returned"
    where: companies_bool_exp, "sort the rows by one or more columns"
    order_by: [companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [companies_select_column!]): [companies!]!
    "fetch data from the table: \"companies\" using primary key columns"
    companies_by_pk(id: Int!): companies
    "fetch data from the table: \"industries\""
    industries("filter the rows returned"
    where: industries_bool_exp, "sort the rows by one or more columns"
    order_by: [industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [industries_select_column!]): [industries!]!
    "fetch data from the table: \"industries\" using primary key columns"
    industries_by_pk(id: Int!): industries
    "fetch data from the table: \"locations\""
    locations("filter the rows returned"
    where: locations_bool_exp, "sort the rows by one or more columns"
    order_by: [locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [locations_select_column!]): [locations!]!
    "fetch data from the table: \"locations\" using primary key columns"
    locations_by_pk(id: Int!): locations
    "fetch data from the table: \"people\""
    people("filter the rows returned"
    where: people_bool_exp, "sort the rows by one or more columns"
    order_by: [people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [people_select_column!]): [people!]!
    "fetch data from the table: \"people\" using primary key columns"
    people_by_pk(id: Int!): people
    "fetch data from the table: \"rss_feeds\" using primary key columns"
    rss_feeds_by_pk(id: Int!): rss_feeds
    "fetch data from the table: \"skills\""
    skills("filter the rows returned"
    where: skills_bool_exp, "sort the rows by one or more columns"
    order_by: [skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [skills_select_column!]): [skills!]!
    "fetch data from the table: \"skills\" using primary key columns"
    skills_by_pk(id: Int!): skills
    "fetch data from the table: \"sources\""
    sources("filter the rows returned"
    where: sources_bool_exp, "sort the rows by one or more columns"
    order_by: [sources_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [sources_select_column!]): [sources!]!
    "fetch data from the table: \"sources\" using primary key columns"
    sources_by_pk(id: Int!): sources
    "fetch data from the table: \"stories\" using primary key columns"
    stories_by_pk(id: Int!): stories
    "fetch data from the table: \"story_companies\" using primary key columns"
    story_companies_by_pk(story_id: Int!, company_id: Int!): story_companies
    "fetch data from the table: \"story_industries\" using primary key columns"
    story_industries_by_pk(story_id: Int!, industry_id: Int!): story_industries
    "fetch data from the table: \"story_locations\" using primary key columns"
    story_locations_by_pk(story_id: Int!, location_id: Int!): story_locations
    "fetch data from the table: \"story_people\" using primary key columns"
    story_people_by_pk(story_id: Int!, person_id: Int!): story_people
    "fetch data from the table: \"story_skills\" using primary key columns"
    story_skills_by_pk(story_id: Int!, skill_id: Int!): story_skills
    "fetch data from the table: \"story_tags\" using primary key columns"
    story_tags_by_pk(story_id: Int!, tag_id: Int!): story_tags
    "fetch data from the table: \"story_thumbnails\" using primary key columns"
    story_thumbnails_by_pk(id: Int!): story_thumbnails
    "fetch data from the table: \"tag_companies\" using primary key columns"
    tag_companies_by_pk(tag_id: Int!, company_id: Int!): tag_companies
    "fetch data from the table: \"tag_industries\" using primary key columns"
    tag_industries_by_pk(tag_id: Int!, industry_id: Int!): tag_industries
    "fetch data from the table: \"tag_people\" using primary key columns"
    tag_people_by_pk(tag_id: Int!, person_id: Int!): tag_people
    "fetch data from the table: \"tag_rss_feeds\" using primary key columns"
    tag_rss_feeds_by_pk(tag_id: Int!, rss_feed_id: Int!): tag_rss_feeds
    "fetch data from the table: \"tag_stories\" using primary key columns"
    tag_stories_by_pk(tag_id: Int!, story_id: Int!): tag_stories
    "fetch data from the table: \"tags\""
    tags("filter the rows returned"
    where: tags_bool_exp, "sort the rows by one or more columns"
    order_by: [tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tags_select_column!]): [tags!]!
    "fetch data from the table: \"tags\" using primary key columns"
    tags_by_pk(id: Int!): tags
}

type subscription_root { "An aggregate relationship"
rss_feeds_aggregate("filter the rows returned"
where: rss_feeds_bool_exp, "sort the rows by one or more columns"
order_by: [rss_feeds_order_by!], "limit the number of rows returned"
limit: Int, "skip the first n rows. Use only with order_by"
offset: Int, "distinct select on columns"
distinct_on: [rss_feeds_select_column!]): rss_feeds_aggregate!
    "An aggregate relationship"
    stories_aggregate("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): stories_aggregate!
    "An aggregate relationship"
    story_companies_aggregate("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): story_companies_aggregate!
    "An aggregate relationship"
    story_industries_aggregate("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): story_industries_aggregate!
    "An aggregate relationship"
    story_locations_aggregate("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): story_locations_aggregate!
    "An aggregate relationship"
    story_people_aggregate("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): story_people_aggregate!
    "An aggregate relationship"
    story_skills_aggregate("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): story_skills_aggregate!
    "An aggregate relationship"
    story_tags_aggregate("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): story_tags_aggregate!
    "An aggregate relationship"
    story_thumbnails_aggregate("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): story_thumbnails_aggregate!
    "An aggregate relationship"
    tag_companies_aggregate("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): tag_companies_aggregate!
    "An aggregate relationship"
    tag_industries_aggregate("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): tag_industries_aggregate!
    "An aggregate relationship"
    tag_people_aggregate("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): tag_people_aggregate!
    "An aggregate relationship"
    tag_rss_feeds_aggregate("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): tag_rss_feeds_aggregate!
    "An aggregate relationship"
    tag_stories_aggregate("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): tag_stories_aggregate!
    "An array relationship"
    rss_feeds("filter the rows returned"
    where: rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [rss_feeds_select_column!]): [rss_feeds!]!
    "An array relationship"
    stories("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): [stories!]!
    "An array relationship"
    story_companies("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): [story_companies!]!
    "An array relationship"
    story_industries("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): [story_industries!]!
    "An array relationship"
    story_locations("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): [story_locations!]!
    "An array relationship"
    story_people("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): [story_people!]!
    "An array relationship"
    story_skills("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): [story_skills!]!
    "An array relationship"
    story_tags("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): [story_tags!]!
    "An array relationship"
    story_thumbnails("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): [story_thumbnails!]!
    "An array relationship"
    tag_companies("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): [tag_companies!]!
    "An array relationship"
    tag_industries("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): [tag_industries!]!
    "An array relationship"
    tag_people("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): [tag_people!]!
    "An array relationship"
    tag_rss_feeds("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): [tag_rss_feeds!]!
    "An array relationship"
    tag_stories("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): [tag_stories!]!
    "fetch aggregated fields from the table: \"authors\""
    authors_aggregate("filter the rows returned"
    where: authors_bool_exp, "sort the rows by one or more columns"
    order_by: [authors_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [authors_select_column!]): authors_aggregate!
    "fetch aggregated fields from the table: \"companies\""
    companies_aggregate("filter the rows returned"
    where: companies_bool_exp, "sort the rows by one or more columns"
    order_by: [companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [companies_select_column!]): companies_aggregate!
    "fetch aggregated fields from the table: \"industries\""
    industries_aggregate("filter the rows returned"
    where: industries_bool_exp, "sort the rows by one or more columns"
    order_by: [industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [industries_select_column!]): industries_aggregate!
    "fetch aggregated fields from the table: \"locations\""
    locations_aggregate("filter the rows returned"
    where: locations_bool_exp, "sort the rows by one or more columns"
    order_by: [locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [locations_select_column!]): locations_aggregate!
    "fetch aggregated fields from the table: \"people\""
    people_aggregate("filter the rows returned"
    where: people_bool_exp, "sort the rows by one or more columns"
    order_by: [people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [people_select_column!]): people_aggregate!
    "fetch aggregated fields from the table: \"skills\""
    skills_aggregate("filter the rows returned"
    where: skills_bool_exp, "sort the rows by one or more columns"
    order_by: [skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [skills_select_column!]): skills_aggregate!
    "fetch aggregated fields from the table: \"sources\""
    sources_aggregate("filter the rows returned"
    where: sources_bool_exp, "sort the rows by one or more columns"
    order_by: [sources_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [sources_select_column!]): sources_aggregate!
    "fetch aggregated fields from the table: \"tags\""
    tags_aggregate("filter the rows returned"
    where: tags_bool_exp, "sort the rows by one or more columns"
    order_by: [tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tags_select_column!]): tags_aggregate!
    "fetch data from the table in a streaming manner: \"authors\""
    authors_stream("filter the rows returned"
    where: authors_bool_exp, "cursor to stream the results returned by the query"
    cursor: [authors_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [authors!]!
    "fetch data from the table in a streaming manner: \"companies\""
    companies_stream("filter the rows returned"
    where: companies_bool_exp, "cursor to stream the results returned by the query"
    cursor: [companies_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [companies!]!
    "fetch data from the table in a streaming manner: \"industries\""
    industries_stream("filter the rows returned"
    where: industries_bool_exp, "cursor to stream the results returned by the query"
    cursor: [industries_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [industries!]!
    "fetch data from the table in a streaming manner: \"locations\""
    locations_stream("filter the rows returned"
    where: locations_bool_exp, "cursor to stream the results returned by the query"
    cursor: [locations_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [locations!]!
    "fetch data from the table in a streaming manner: \"people\""
    people_stream("filter the rows returned"
    where: people_bool_exp, "cursor to stream the results returned by the query"
    cursor: [people_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [people!]!
    "fetch data from the table in a streaming manner: \"rss_feeds\""
    rss_feeds_stream("filter the rows returned"
    where: rss_feeds_bool_exp, "cursor to stream the results returned by the query"
    cursor: [rss_feeds_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [rss_feeds!]!
    "fetch data from the table in a streaming manner: \"skills\""
    skills_stream("filter the rows returned"
    where: skills_bool_exp, "cursor to stream the results returned by the query"
    cursor: [skills_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [skills!]!
    "fetch data from the table in a streaming manner: \"sources\""
    sources_stream("filter the rows returned"
    where: sources_bool_exp, "cursor to stream the results returned by the query"
    cursor: [sources_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [sources!]!
    "fetch data from the table in a streaming manner: \"stories\""
    stories_stream("filter the rows returned"
    where: stories_bool_exp, "cursor to stream the results returned by the query"
    cursor: [stories_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [stories!]!
    "fetch data from the table in a streaming manner: \"story_companies\""
    story_companies_stream("filter the rows returned"
    where: story_companies_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_companies_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_companies!]!
    "fetch data from the table in a streaming manner: \"story_industries\""
    story_industries_stream("filter the rows returned"
    where: story_industries_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_industries_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_industries!]!
    "fetch data from the table in a streaming manner: \"story_locations\""
    story_locations_stream("filter the rows returned"
    where: story_locations_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_locations_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_locations!]!
    "fetch data from the table in a streaming manner: \"story_people\""
    story_people_stream("filter the rows returned"
    where: story_people_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_people_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_people!]!
    "fetch data from the table in a streaming manner: \"story_skills\""
    story_skills_stream("filter the rows returned"
    where: story_skills_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_skills_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_skills!]!
    "fetch data from the table in a streaming manner: \"story_tags\""
    story_tags_stream("filter the rows returned"
    where: story_tags_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_tags_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_tags!]!
    "fetch data from the table in a streaming manner: \"story_thumbnails\""
    story_thumbnails_stream("filter the rows returned"
    where: story_thumbnails_bool_exp, "cursor to stream the results returned by the query"
    cursor: [story_thumbnails_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [story_thumbnails!]!
    "fetch data from the table in a streaming manner: \"tag_companies\""
    tag_companies_stream("filter the rows returned"
    where: tag_companies_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tag_companies_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tag_companies!]!
    "fetch data from the table in a streaming manner: \"tag_industries\""
    tag_industries_stream("filter the rows returned"
    where: tag_industries_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tag_industries_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tag_industries!]!
    "fetch data from the table in a streaming manner: \"tag_people\""
    tag_people_stream("filter the rows returned"
    where: tag_people_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tag_people_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tag_people!]!
    "fetch data from the table in a streaming manner: \"tag_rss_feeds\""
    tag_rss_feeds_stream("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tag_rss_feeds_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tag_rss_feeds!]!
    "fetch data from the table in a streaming manner: \"tag_stories\""
    tag_stories_stream("filter the rows returned"
    where: tag_stories_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tag_stories_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tag_stories!]!
    "fetch data from the table in a streaming manner: \"tags\""
    tags_stream("filter the rows returned"
    where: tags_bool_exp, "cursor to stream the results returned by the query"
    cursor: [tags_stream_cursor_input]!, "maximum number of rows returned in a single batch"
    batch_size: Int!): [tags!]!
    "fetch data from the table: \"authors\""
    authors("filter the rows returned"
    where: authors_bool_exp, "sort the rows by one or more columns"
    order_by: [authors_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [authors_select_column!]): [authors!]!
    "fetch data from the table: \"authors\" using primary key columns"
    authors_by_pk(id: Int!): authors
    "fetch data from the table: \"companies\""
    companies("filter the rows returned"
    where: companies_bool_exp, "sort the rows by one or more columns"
    order_by: [companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [companies_select_column!]): [companies!]!
    "fetch data from the table: \"companies\" using primary key columns"
    companies_by_pk(id: Int!): companies
    "fetch data from the table: \"industries\""
    industries("filter the rows returned"
    where: industries_bool_exp, "sort the rows by one or more columns"
    order_by: [industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [industries_select_column!]): [industries!]!
    "fetch data from the table: \"industries\" using primary key columns"
    industries_by_pk(id: Int!): industries
    "fetch data from the table: \"locations\""
    locations("filter the rows returned"
    where: locations_bool_exp, "sort the rows by one or more columns"
    order_by: [locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [locations_select_column!]): [locations!]!
    "fetch data from the table: \"locations\" using primary key columns"
    locations_by_pk(id: Int!): locations
    "fetch data from the table: \"people\""
    people("filter the rows returned"
    where: people_bool_exp, "sort the rows by one or more columns"
    order_by: [people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [people_select_column!]): [people!]!
    "fetch data from the table: \"people\" using primary key columns"
    people_by_pk(id: Int!): people
    "fetch data from the table: \"rss_feeds\" using primary key columns"
    rss_feeds_by_pk(id: Int!): rss_feeds
    "fetch data from the table: \"skills\""
    skills("filter the rows returned"
    where: skills_bool_exp, "sort the rows by one or more columns"
    order_by: [skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [skills_select_column!]): [skills!]!
    "fetch data from the table: \"skills\" using primary key columns"
    skills_by_pk(id: Int!): skills
    "fetch data from the table: \"sources\""
    sources("filter the rows returned"
    where: sources_bool_exp, "sort the rows by one or more columns"
    order_by: [sources_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [sources_select_column!]): [sources!]!
    "fetch data from the table: \"sources\" using primary key columns"
    sources_by_pk(id: Int!): sources
    "fetch data from the table: \"stories\" using primary key columns"
    stories_by_pk(id: Int!): stories
    "fetch data from the table: \"story_companies\" using primary key columns"
    story_companies_by_pk(story_id: Int!, company_id: Int!): story_companies
    "fetch data from the table: \"story_industries\" using primary key columns"
    story_industries_by_pk(story_id: Int!, industry_id: Int!): story_industries
    "fetch data from the table: \"story_locations\" using primary key columns"
    story_locations_by_pk(story_id: Int!, location_id: Int!): story_locations
    "fetch data from the table: \"story_people\" using primary key columns"
    story_people_by_pk(story_id: Int!, person_id: Int!): story_people
    "fetch data from the table: \"story_skills\" using primary key columns"
    story_skills_by_pk(story_id: Int!, skill_id: Int!): story_skills
    "fetch data from the table: \"story_tags\" using primary key columns"
    story_tags_by_pk(story_id: Int!, tag_id: Int!): story_tags
    "fetch data from the table: \"story_thumbnails\" using primary key columns"
    story_thumbnails_by_pk(id: Int!): story_thumbnails
    "fetch data from the table: \"tag_companies\" using primary key columns"
    tag_companies_by_pk(tag_id: Int!, company_id: Int!): tag_companies
    "fetch data from the table: \"tag_industries\" using primary key columns"
    tag_industries_by_pk(tag_id: Int!, industry_id: Int!): tag_industries
    "fetch data from the table: \"tag_people\" using primary key columns"
    tag_people_by_pk(tag_id: Int!, person_id: Int!): tag_people
    "fetch data from the table: \"tag_rss_feeds\" using primary key columns"
    tag_rss_feeds_by_pk(tag_id: Int!, rss_feed_id: Int!): tag_rss_feeds
    "fetch data from the table: \"tag_stories\" using primary key columns"
    tag_stories_by_pk(tag_id: Int!, story_id: Int!): tag_stories
    "fetch data from the table: \"tags\""
    tags("filter the rows returned"
    where: tags_bool_exp, "sort the rows by one or more columns"
    order_by: [tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tags_select_column!]): [tags!]!
    "fetch data from the table: \"tags\" using primary key columns"
    tags_by_pk(id: Int!): tags
}

"aggregate avg on columns"
type authors_avg_fields { id: Float
}

"aggregate avg on columns"
type companies_avg_fields { id: Float
}

"aggregate avg on columns"
type industries_avg_fields { id: Float
}

"aggregate avg on columns"
type locations_avg_fields { id: Float
}

"aggregate avg on columns"
type people_avg_fields { id: Float
}

"aggregate avg on columns"
type rss_feeds_avg_fields { id: Float
    source_id: Float
}

"aggregate avg on columns"
type skills_avg_fields { id: Float
}

"aggregate avg on columns"
type sources_avg_fields { id: Float
}

"aggregate avg on columns"
type stories_avg_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate avg on columns"
type story_companies_avg_fields { company_id: Float
    story_id: Float
}

"aggregate avg on columns"
type story_industries_avg_fields { industry_id: Float
    story_id: Float
}

"aggregate avg on columns"
type story_locations_avg_fields { location_id: Float
    story_id: Float
}

"aggregate avg on columns"
type story_people_avg_fields { person_id: Float
    story_id: Float
}

"aggregate avg on columns"
type story_skills_avg_fields { skill_id: Float
    story_id: Float
}

"aggregate avg on columns"
type story_tags_avg_fields { story_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type story_thumbnails_avg_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate avg on columns"
type tag_companies_avg_fields { company_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type tag_industries_avg_fields { industry_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type tag_people_avg_fields { person_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type tag_rss_feeds_avg_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type tag_stories_avg_fields { story_id: Float
    tag_id: Float
}

"aggregate avg on columns"
type tags_avg_fields { id: Float
}

"aggregate fields of \"authors\""
type authors_aggregate_fields { avg: authors_avg_fields
    count(distinct: Boolean, columns: [authors_select_column!]): Int!
    max: authors_max_fields
    min: authors_min_fields
    stddev: authors_stddev_fields
    stddev_pop: authors_stddev_pop_fields
    stddev_samp: authors_stddev_samp_fields
    sum: authors_sum_fields
    var_pop: authors_var_pop_fields
    var_samp: authors_var_samp_fields
    variance: authors_variance_fields
}

"aggregate fields of \"companies\""
type companies_aggregate_fields { avg: companies_avg_fields
    count(distinct: Boolean, columns: [companies_select_column!]): Int!
    max: companies_max_fields
    min: companies_min_fields
    stddev: companies_stddev_fields
    stddev_pop: companies_stddev_pop_fields
    stddev_samp: companies_stddev_samp_fields
    sum: companies_sum_fields
    var_pop: companies_var_pop_fields
    var_samp: companies_var_samp_fields
    variance: companies_variance_fields
}

"aggregate fields of \"industries\""
type industries_aggregate_fields { avg: industries_avg_fields
    count(distinct: Boolean, columns: [industries_select_column!]): Int!
    max: industries_max_fields
    min: industries_min_fields
    stddev: industries_stddev_fields
    stddev_pop: industries_stddev_pop_fields
    stddev_samp: industries_stddev_samp_fields
    sum: industries_sum_fields
    var_pop: industries_var_pop_fields
    var_samp: industries_var_samp_fields
    variance: industries_variance_fields
}

"aggregate fields of \"locations\""
type locations_aggregate_fields { avg: locations_avg_fields
    count(distinct: Boolean, columns: [locations_select_column!]): Int!
    max: locations_max_fields
    min: locations_min_fields
    stddev: locations_stddev_fields
    stddev_pop: locations_stddev_pop_fields
    stddev_samp: locations_stddev_samp_fields
    sum: locations_sum_fields
    var_pop: locations_var_pop_fields
    var_samp: locations_var_samp_fields
    variance: locations_variance_fields
}

"aggregate fields of \"people\""
type people_aggregate_fields { avg: people_avg_fields
    count(distinct: Boolean, columns: [people_select_column!]): Int!
    max: people_max_fields
    min: people_min_fields
    stddev: people_stddev_fields
    stddev_pop: people_stddev_pop_fields
    stddev_samp: people_stddev_samp_fields
    sum: people_sum_fields
    var_pop: people_var_pop_fields
    var_samp: people_var_samp_fields
    variance: people_variance_fields
}

"aggregate fields of \"rss_feeds\""
type rss_feeds_aggregate_fields { avg: rss_feeds_avg_fields
    count(distinct: Boolean, columns: [rss_feeds_select_column!]): Int!
    max: rss_feeds_max_fields
    min: rss_feeds_min_fields
    stddev: rss_feeds_stddev_fields
    stddev_pop: rss_feeds_stddev_pop_fields
    stddev_samp: rss_feeds_stddev_samp_fields
    sum: rss_feeds_sum_fields
    var_pop: rss_feeds_var_pop_fields
    var_samp: rss_feeds_var_samp_fields
    variance: rss_feeds_variance_fields
}

"aggregate fields of \"skills\""
type skills_aggregate_fields { avg: skills_avg_fields
    count(distinct: Boolean, columns: [skills_select_column!]): Int!
    max: skills_max_fields
    min: skills_min_fields
    stddev: skills_stddev_fields
    stddev_pop: skills_stddev_pop_fields
    stddev_samp: skills_stddev_samp_fields
    sum: skills_sum_fields
    var_pop: skills_var_pop_fields
    var_samp: skills_var_samp_fields
    variance: skills_variance_fields
}

"aggregate fields of \"sources\""
type sources_aggregate_fields { avg: sources_avg_fields
    count(distinct: Boolean, columns: [sources_select_column!]): Int!
    max: sources_max_fields
    min: sources_min_fields
    stddev: sources_stddev_fields
    stddev_pop: sources_stddev_pop_fields
    stddev_samp: sources_stddev_samp_fields
    sum: sources_sum_fields
    var_pop: sources_var_pop_fields
    var_samp: sources_var_samp_fields
    variance: sources_variance_fields
}

"aggregate fields of \"stories\""
type stories_aggregate_fields { avg: stories_avg_fields
    count(distinct: Boolean, columns: [stories_select_column!]): Int!
    max: stories_max_fields
    min: stories_min_fields
    stddev: stories_stddev_fields
    stddev_pop: stories_stddev_pop_fields
    stddev_samp: stories_stddev_samp_fields
    sum: stories_sum_fields
    var_pop: stories_var_pop_fields
    var_samp: stories_var_samp_fields
    variance: stories_variance_fields
}

"aggregate fields of \"story_companies\""
type story_companies_aggregate_fields { avg: story_companies_avg_fields
    count(distinct: Boolean, columns: [story_companies_select_column!]): Int!
    max: story_companies_max_fields
    min: story_companies_min_fields
    stddev: story_companies_stddev_fields
    stddev_pop: story_companies_stddev_pop_fields
    stddev_samp: story_companies_stddev_samp_fields
    sum: story_companies_sum_fields
    var_pop: story_companies_var_pop_fields
    var_samp: story_companies_var_samp_fields
    variance: story_companies_variance_fields
}

"aggregate fields of \"story_industries\""
type story_industries_aggregate_fields { avg: story_industries_avg_fields
    count(distinct: Boolean, columns: [story_industries_select_column!]): Int!
    max: story_industries_max_fields
    min: story_industries_min_fields
    stddev: story_industries_stddev_fields
    stddev_pop: story_industries_stddev_pop_fields
    stddev_samp: story_industries_stddev_samp_fields
    sum: story_industries_sum_fields
    var_pop: story_industries_var_pop_fields
    var_samp: story_industries_var_samp_fields
    variance: story_industries_variance_fields
}

"aggregate fields of \"story_locations\""
type story_locations_aggregate_fields { avg: story_locations_avg_fields
    count(distinct: Boolean, columns: [story_locations_select_column!]): Int!
    max: story_locations_max_fields
    min: story_locations_min_fields
    stddev: story_locations_stddev_fields
    stddev_pop: story_locations_stddev_pop_fields
    stddev_samp: story_locations_stddev_samp_fields
    sum: story_locations_sum_fields
    var_pop: story_locations_var_pop_fields
    var_samp: story_locations_var_samp_fields
    variance: story_locations_variance_fields
}

"aggregate fields of \"story_people\""
type story_people_aggregate_fields { avg: story_people_avg_fields
    count(distinct: Boolean, columns: [story_people_select_column!]): Int!
    max: story_people_max_fields
    min: story_people_min_fields
    stddev: story_people_stddev_fields
    stddev_pop: story_people_stddev_pop_fields
    stddev_samp: story_people_stddev_samp_fields
    sum: story_people_sum_fields
    var_pop: story_people_var_pop_fields
    var_samp: story_people_var_samp_fields
    variance: story_people_variance_fields
}

"aggregate fields of \"story_skills\""
type story_skills_aggregate_fields { avg: story_skills_avg_fields
    count(distinct: Boolean, columns: [story_skills_select_column!]): Int!
    max: story_skills_max_fields
    min: story_skills_min_fields
    stddev: story_skills_stddev_fields
    stddev_pop: story_skills_stddev_pop_fields
    stddev_samp: story_skills_stddev_samp_fields
    sum: story_skills_sum_fields
    var_pop: story_skills_var_pop_fields
    var_samp: story_skills_var_samp_fields
    variance: story_skills_variance_fields
}

"aggregate fields of \"story_tags\""
type story_tags_aggregate_fields { avg: story_tags_avg_fields
    count(distinct: Boolean, columns: [story_tags_select_column!]): Int!
    max: story_tags_max_fields
    min: story_tags_min_fields
    stddev: story_tags_stddev_fields
    stddev_pop: story_tags_stddev_pop_fields
    stddev_samp: story_tags_stddev_samp_fields
    sum: story_tags_sum_fields
    var_pop: story_tags_var_pop_fields
    var_samp: story_tags_var_samp_fields
    variance: story_tags_variance_fields
}

"aggregate fields of \"story_thumbnails\""
type story_thumbnails_aggregate_fields { avg: story_thumbnails_avg_fields
    count(distinct: Boolean, columns: [story_thumbnails_select_column!]): Int!
    max: story_thumbnails_max_fields
    min: story_thumbnails_min_fields
    stddev: story_thumbnails_stddev_fields
    stddev_pop: story_thumbnails_stddev_pop_fields
    stddev_samp: story_thumbnails_stddev_samp_fields
    sum: story_thumbnails_sum_fields
    var_pop: story_thumbnails_var_pop_fields
    var_samp: story_thumbnails_var_samp_fields
    variance: story_thumbnails_variance_fields
}

"aggregate fields of \"tag_companies\""
type tag_companies_aggregate_fields { avg: tag_companies_avg_fields
    count(distinct: Boolean, columns: [tag_companies_select_column!]): Int!
    max: tag_companies_max_fields
    min: tag_companies_min_fields
    stddev: tag_companies_stddev_fields
    stddev_pop: tag_companies_stddev_pop_fields
    stddev_samp: tag_companies_stddev_samp_fields
    sum: tag_companies_sum_fields
    var_pop: tag_companies_var_pop_fields
    var_samp: tag_companies_var_samp_fields
    variance: tag_companies_variance_fields
}

"aggregate fields of \"tag_industries\""
type tag_industries_aggregate_fields { avg: tag_industries_avg_fields
    count(distinct: Boolean, columns: [tag_industries_select_column!]): Int!
    max: tag_industries_max_fields
    min: tag_industries_min_fields
    stddev: tag_industries_stddev_fields
    stddev_pop: tag_industries_stddev_pop_fields
    stddev_samp: tag_industries_stddev_samp_fields
    sum: tag_industries_sum_fields
    var_pop: tag_industries_var_pop_fields
    var_samp: tag_industries_var_samp_fields
    variance: tag_industries_variance_fields
}

"aggregate fields of \"tag_people\""
type tag_people_aggregate_fields { avg: tag_people_avg_fields
    count(distinct: Boolean, columns: [tag_people_select_column!]): Int!
    max: tag_people_max_fields
    min: tag_people_min_fields
    stddev: tag_people_stddev_fields
    stddev_pop: tag_people_stddev_pop_fields
    stddev_samp: tag_people_stddev_samp_fields
    sum: tag_people_sum_fields
    var_pop: tag_people_var_pop_fields
    var_samp: tag_people_var_samp_fields
    variance: tag_people_variance_fields
}

"aggregate fields of \"tag_rss_feeds\""
type tag_rss_feeds_aggregate_fields { avg: tag_rss_feeds_avg_fields
    count(distinct: Boolean, columns: [tag_rss_feeds_select_column!]): Int!
    max: tag_rss_feeds_max_fields
    min: tag_rss_feeds_min_fields
    stddev: tag_rss_feeds_stddev_fields
    stddev_pop: tag_rss_feeds_stddev_pop_fields
    stddev_samp: tag_rss_feeds_stddev_samp_fields
    sum: tag_rss_feeds_sum_fields
    var_pop: tag_rss_feeds_var_pop_fields
    var_samp: tag_rss_feeds_var_samp_fields
    variance: tag_rss_feeds_variance_fields
}

"aggregate fields of \"tag_stories\""
type tag_stories_aggregate_fields { avg: tag_stories_avg_fields
    count(distinct: Boolean, columns: [tag_stories_select_column!]): Int!
    max: tag_stories_max_fields
    min: tag_stories_min_fields
    stddev: tag_stories_stddev_fields
    stddev_pop: tag_stories_stddev_pop_fields
    stddev_samp: tag_stories_stddev_samp_fields
    sum: tag_stories_sum_fields
    var_pop: tag_stories_var_pop_fields
    var_samp: tag_stories_var_samp_fields
    variance: tag_stories_variance_fields
}

"aggregate fields of \"tags\""
type tags_aggregate_fields { avg: tags_avg_fields
    count(distinct: Boolean, columns: [tags_select_column!]): Int!
    max: tags_max_fields
    min: tags_min_fields
    stddev: tags_stddev_fields
    stddev_pop: tags_stddev_pop_fields
    stddev_samp: tags_stddev_samp_fields
    sum: tags_sum_fields
    var_pop: tags_var_pop_fields
    var_samp: tags_var_samp_fields
    variance: tags_variance_fields
}

"aggregate max on columns"
type authors_max_fields { bio: String
    id: Int
    name: String
    photo_url: String
}

"aggregate max on columns"
type companies_max_fields { id: Int
    name: String
}

"aggregate max on columns"
type industries_max_fields { id: Int
    name: String
}

"aggregate max on columns"
type locations_max_fields { city: String
    country: String
    id: Int
    name: String
    semantic_id: String
    state: String
}

"aggregate max on columns"
type people_max_fields { id: Int
    name: String
}

"aggregate max on columns"
type rss_feeds_max_fields { id: Int
    location_semantic_id: String
    source_id: Int
    title: String
    url: String
}

"aggregate max on columns"
type skills_max_fields { id: Int
    name: String
}

"aggregate max on columns"
type sources_max_fields { id: Int
    logo_url: String
    name: String
}

"aggregate max on columns"
type stories_max_fields { author_id: Int
    content: String
    description: String
    embedding: [float8!]
    guid: String
    id: Int
    publication_date: timestamp
    rss_feed_id: Int
    summary: String
    title: String
    url: String
    vector_representation: String
}

"aggregate max on columns"
type story_companies_max_fields { company_id: Int
    story_id: Int
}

"aggregate max on columns"
type story_industries_max_fields { industry_id: Int
    story_id: Int
}

"aggregate max on columns"
type story_locations_max_fields { location_id: Int
    story_id: Int
}

"aggregate max on columns"
type story_people_max_fields { person_id: Int
    story_id: Int
}

"aggregate max on columns"
type story_skills_max_fields { skill_id: Int
    story_id: Int
}

"aggregate max on columns"
type story_tags_max_fields { story_id: Int
    tag_id: Int
}

"aggregate max on columns"
type story_thumbnails_max_fields { height: Int
    id: Int
    story_id: Int
    url: String
    width: Int
}

"aggregate max on columns"
type tag_companies_max_fields { company_id: Int
    tag_id: Int
}

"aggregate max on columns"
type tag_industries_max_fields { industry_id: Int
    tag_id: Int
}

"aggregate max on columns"
type tag_people_max_fields { person_id: Int
    tag_id: Int
}

"aggregate max on columns"
type tag_rss_feeds_max_fields { rss_feed_id: Int
    tag_id: Int
}

"aggregate max on columns"
type tag_stories_max_fields { story_id: Int
    tag_id: Int
}

"aggregate max on columns"
type tags_max_fields { id: Int
    name: String
}

"aggregate min on columns"
type authors_min_fields { bio: String
    id: Int
    name: String
    photo_url: String
}

"aggregate min on columns"
type companies_min_fields { id: Int
    name: String
}

"aggregate min on columns"
type industries_min_fields { id: Int
    name: String
}

"aggregate min on columns"
type locations_min_fields { city: String
    country: String
    id: Int
    name: String
    semantic_id: String
    state: String
}

"aggregate min on columns"
type people_min_fields { id: Int
    name: String
}

"aggregate min on columns"
type rss_feeds_min_fields { id: Int
    location_semantic_id: String
    source_id: Int
    title: String
    url: String
}

"aggregate min on columns"
type skills_min_fields { id: Int
    name: String
}

"aggregate min on columns"
type sources_min_fields { id: Int
    logo_url: String
    name: String
}

"aggregate min on columns"
type stories_min_fields { author_id: Int
    content: String
    description: String
    embedding: [float8!]
    guid: String
    id: Int
    publication_date: timestamp
    rss_feed_id: Int
    summary: String
    title: String
    url: String
    vector_representation: String
}

"aggregate min on columns"
type story_companies_min_fields { company_id: Int
    story_id: Int
}

"aggregate min on columns"
type story_industries_min_fields { industry_id: Int
    story_id: Int
}

"aggregate min on columns"
type story_locations_min_fields { location_id: Int
    story_id: Int
}

"aggregate min on columns"
type story_people_min_fields { person_id: Int
    story_id: Int
}

"aggregate min on columns"
type story_skills_min_fields { skill_id: Int
    story_id: Int
}

"aggregate min on columns"
type story_tags_min_fields { story_id: Int
    tag_id: Int
}

"aggregate min on columns"
type story_thumbnails_min_fields { height: Int
    id: Int
    story_id: Int
    url: String
    width: Int
}

"aggregate min on columns"
type tag_companies_min_fields { company_id: Int
    tag_id: Int
}

"aggregate min on columns"
type tag_industries_min_fields { industry_id: Int
    tag_id: Int
}

"aggregate min on columns"
type tag_people_min_fields { person_id: Int
    tag_id: Int
}

"aggregate min on columns"
type tag_rss_feeds_min_fields { rss_feed_id: Int
    tag_id: Int
}

"aggregate min on columns"
type tag_stories_min_fields { story_id: Int
    tag_id: Int
}

"aggregate min on columns"
type tags_min_fields { id: Int
    name: String
}

"aggregate stddev on columns"
type authors_stddev_fields { id: Float
}

"aggregate stddev on columns"
type companies_stddev_fields { id: Float
}

"aggregate stddev on columns"
type industries_stddev_fields { id: Float
}

"aggregate stddev on columns"
type locations_stddev_fields { id: Float
}

"aggregate stddev on columns"
type people_stddev_fields { id: Float
}

"aggregate stddev on columns"
type rss_feeds_stddev_fields { id: Float
    source_id: Float
}

"aggregate stddev on columns"
type skills_stddev_fields { id: Float
}

"aggregate stddev on columns"
type sources_stddev_fields { id: Float
}

"aggregate stddev on columns"
type stories_stddev_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate stddev on columns"
type story_companies_stddev_fields { company_id: Float
    story_id: Float
}

"aggregate stddev on columns"
type story_industries_stddev_fields { industry_id: Float
    story_id: Float
}

"aggregate stddev on columns"
type story_locations_stddev_fields { location_id: Float
    story_id: Float
}

"aggregate stddev on columns"
type story_people_stddev_fields { person_id: Float
    story_id: Float
}

"aggregate stddev on columns"
type story_skills_stddev_fields { skill_id: Float
    story_id: Float
}

"aggregate stddev on columns"
type story_tags_stddev_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type story_thumbnails_stddev_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate stddev on columns"
type tag_companies_stddev_fields { company_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type tag_industries_stddev_fields { industry_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type tag_people_stddev_fields { person_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type tag_rss_feeds_stddev_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type tag_stories_stddev_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev on columns"
type tags_stddev_fields { id: Float
}

"aggregate stddev_pop on columns"
type authors_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type companies_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type industries_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type locations_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type people_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type rss_feeds_stddev_pop_fields { id: Float
    source_id: Float
}

"aggregate stddev_pop on columns"
type skills_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type sources_stddev_pop_fields { id: Float
}

"aggregate stddev_pop on columns"
type stories_stddev_pop_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate stddev_pop on columns"
type story_companies_stddev_pop_fields { company_id: Float
    story_id: Float
}

"aggregate stddev_pop on columns"
type story_industries_stddev_pop_fields { industry_id: Float
    story_id: Float
}

"aggregate stddev_pop on columns"
type story_locations_stddev_pop_fields { location_id: Float
    story_id: Float
}

"aggregate stddev_pop on columns"
type story_people_stddev_pop_fields { person_id: Float
    story_id: Float
}

"aggregate stddev_pop on columns"
type story_skills_stddev_pop_fields { skill_id: Float
    story_id: Float
}

"aggregate stddev_pop on columns"
type story_tags_stddev_pop_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type story_thumbnails_stddev_pop_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate stddev_pop on columns"
type tag_companies_stddev_pop_fields { company_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type tag_industries_stddev_pop_fields { industry_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type tag_people_stddev_pop_fields { person_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type tag_rss_feeds_stddev_pop_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type tag_stories_stddev_pop_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev_pop on columns"
type tags_stddev_pop_fields { id: Float
}

"aggregate stddev_samp on columns"
type authors_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type companies_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type industries_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type locations_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type people_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type rss_feeds_stddev_samp_fields { id: Float
    source_id: Float
}

"aggregate stddev_samp on columns"
type skills_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type sources_stddev_samp_fields { id: Float
}

"aggregate stddev_samp on columns"
type stories_stddev_samp_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate stddev_samp on columns"
type story_companies_stddev_samp_fields { company_id: Float
    story_id: Float
}

"aggregate stddev_samp on columns"
type story_industries_stddev_samp_fields { industry_id: Float
    story_id: Float
}

"aggregate stddev_samp on columns"
type story_locations_stddev_samp_fields { location_id: Float
    story_id: Float
}

"aggregate stddev_samp on columns"
type story_people_stddev_samp_fields { person_id: Float
    story_id: Float
}

"aggregate stddev_samp on columns"
type story_skills_stddev_samp_fields { skill_id: Float
    story_id: Float
}

"aggregate stddev_samp on columns"
type story_tags_stddev_samp_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type story_thumbnails_stddev_samp_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate stddev_samp on columns"
type tag_companies_stddev_samp_fields { company_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type tag_industries_stddev_samp_fields { industry_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type tag_people_stddev_samp_fields { person_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type tag_rss_feeds_stddev_samp_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type tag_stories_stddev_samp_fields { story_id: Float
    tag_id: Float
}

"aggregate stddev_samp on columns"
type tags_stddev_samp_fields { id: Float
}

"aggregate sum on columns"
type authors_sum_fields { id: Int
}

"aggregate sum on columns"
type companies_sum_fields { id: Int
}

"aggregate sum on columns"
type industries_sum_fields { id: Int
}

"aggregate sum on columns"
type locations_sum_fields { id: Int
}

"aggregate sum on columns"
type people_sum_fields { id: Int
}

"aggregate sum on columns"
type rss_feeds_sum_fields { id: Int
    source_id: Int
}

"aggregate sum on columns"
type skills_sum_fields { id: Int
}

"aggregate sum on columns"
type sources_sum_fields { id: Int
}

"aggregate sum on columns"
type stories_sum_fields { author_id: Int
    id: Int
    rss_feed_id: Int
}

"aggregate sum on columns"
type story_companies_sum_fields { company_id: Int
    story_id: Int
}

"aggregate sum on columns"
type story_industries_sum_fields { industry_id: Int
    story_id: Int
}

"aggregate sum on columns"
type story_locations_sum_fields { location_id: Int
    story_id: Int
}

"aggregate sum on columns"
type story_people_sum_fields { person_id: Int
    story_id: Int
}

"aggregate sum on columns"
type story_skills_sum_fields { skill_id: Int
    story_id: Int
}

"aggregate sum on columns"
type story_tags_sum_fields { story_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type story_thumbnails_sum_fields { height: Int
    id: Int
    story_id: Int
    width: Int
}

"aggregate sum on columns"
type tag_companies_sum_fields { company_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type tag_industries_sum_fields { industry_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type tag_people_sum_fields { person_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type tag_rss_feeds_sum_fields { rss_feed_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type tag_stories_sum_fields { story_id: Int
    tag_id: Int
}

"aggregate sum on columns"
type tags_sum_fields { id: Int
}

"aggregate var_pop on columns"
type authors_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type companies_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type industries_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type locations_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type people_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type rss_feeds_var_pop_fields { id: Float
    source_id: Float
}

"aggregate var_pop on columns"
type skills_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type sources_var_pop_fields { id: Float
}

"aggregate var_pop on columns"
type stories_var_pop_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate var_pop on columns"
type story_companies_var_pop_fields { company_id: Float
    story_id: Float
}

"aggregate var_pop on columns"
type story_industries_var_pop_fields { industry_id: Float
    story_id: Float
}

"aggregate var_pop on columns"
type story_locations_var_pop_fields { location_id: Float
    story_id: Float
}

"aggregate var_pop on columns"
type story_people_var_pop_fields { person_id: Float
    story_id: Float
}

"aggregate var_pop on columns"
type story_skills_var_pop_fields { skill_id: Float
    story_id: Float
}

"aggregate var_pop on columns"
type story_tags_var_pop_fields { story_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type story_thumbnails_var_pop_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate var_pop on columns"
type tag_companies_var_pop_fields { company_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type tag_industries_var_pop_fields { industry_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type tag_people_var_pop_fields { person_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type tag_rss_feeds_var_pop_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type tag_stories_var_pop_fields { story_id: Float
    tag_id: Float
}

"aggregate var_pop on columns"
type tags_var_pop_fields { id: Float
}

"aggregate var_samp on columns"
type authors_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type companies_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type industries_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type locations_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type people_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type rss_feeds_var_samp_fields { id: Float
    source_id: Float
}

"aggregate var_samp on columns"
type skills_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type sources_var_samp_fields { id: Float
}

"aggregate var_samp on columns"
type stories_var_samp_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate var_samp on columns"
type story_companies_var_samp_fields { company_id: Float
    story_id: Float
}

"aggregate var_samp on columns"
type story_industries_var_samp_fields { industry_id: Float
    story_id: Float
}

"aggregate var_samp on columns"
type story_locations_var_samp_fields { location_id: Float
    story_id: Float
}

"aggregate var_samp on columns"
type story_people_var_samp_fields { person_id: Float
    story_id: Float
}

"aggregate var_samp on columns"
type story_skills_var_samp_fields { skill_id: Float
    story_id: Float
}

"aggregate var_samp on columns"
type story_tags_var_samp_fields { story_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type story_thumbnails_var_samp_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate var_samp on columns"
type tag_companies_var_samp_fields { company_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type tag_industries_var_samp_fields { industry_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type tag_people_var_samp_fields { person_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type tag_rss_feeds_var_samp_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type tag_stories_var_samp_fields { story_id: Float
    tag_id: Float
}

"aggregate var_samp on columns"
type tags_var_samp_fields { id: Float
}

"aggregate variance on columns"
type authors_variance_fields { id: Float
}

"aggregate variance on columns"
type companies_variance_fields { id: Float
}

"aggregate variance on columns"
type industries_variance_fields { id: Float
}

"aggregate variance on columns"
type locations_variance_fields { id: Float
}

"aggregate variance on columns"
type people_variance_fields { id: Float
}

"aggregate variance on columns"
type rss_feeds_variance_fields { id: Float
    source_id: Float
}

"aggregate variance on columns"
type skills_variance_fields { id: Float
}

"aggregate variance on columns"
type sources_variance_fields { id: Float
}

"aggregate variance on columns"
type stories_variance_fields { author_id: Float
    id: Float
    rss_feed_id: Float
}

"aggregate variance on columns"
type story_companies_variance_fields { company_id: Float
    story_id: Float
}

"aggregate variance on columns"
type story_industries_variance_fields { industry_id: Float
    story_id: Float
}

"aggregate variance on columns"
type story_locations_variance_fields { location_id: Float
    story_id: Float
}

"aggregate variance on columns"
type story_people_variance_fields { person_id: Float
    story_id: Float
}

"aggregate variance on columns"
type story_skills_variance_fields { skill_id: Float
    story_id: Float
}

"aggregate variance on columns"
type story_tags_variance_fields { story_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type story_thumbnails_variance_fields { height: Float
    id: Float
    story_id: Float
    width: Float
}

"aggregate variance on columns"
type tag_companies_variance_fields { company_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type tag_industries_variance_fields { industry_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type tag_people_variance_fields { person_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type tag_rss_feeds_variance_fields { rss_feed_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type tag_stories_variance_fields { story_id: Float
    tag_id: Float
}

"aggregate variance on columns"
type tags_variance_fields { id: Float
}

"aggregated selection of \"authors\""
type authors_aggregate { aggregate: authors_aggregate_fields
    nodes: [authors!]!
}

"aggregated selection of \"companies\""
type companies_aggregate { aggregate: companies_aggregate_fields
    nodes: [companies!]!
}

"aggregated selection of \"industries\""
type industries_aggregate { aggregate: industries_aggregate_fields
    nodes: [industries!]!
}

"aggregated selection of \"locations\""
type locations_aggregate { aggregate: locations_aggregate_fields
    nodes: [locations!]!
}

"aggregated selection of \"people\""
type people_aggregate { aggregate: people_aggregate_fields
    nodes: [people!]!
}

"aggregated selection of \"rss_feeds\""
type rss_feeds_aggregate { aggregate: rss_feeds_aggregate_fields
    nodes: [rss_feeds!]!
}

"aggregated selection of \"skills\""
type skills_aggregate { aggregate: skills_aggregate_fields
    nodes: [skills!]!
}

"aggregated selection of \"sources\""
type sources_aggregate { aggregate: sources_aggregate_fields
    nodes: [sources!]!
}

"aggregated selection of \"stories\""
type stories_aggregate { aggregate: stories_aggregate_fields
    nodes: [stories!]!
}

"aggregated selection of \"story_companies\""
type story_companies_aggregate { aggregate: story_companies_aggregate_fields
    nodes: [story_companies!]!
}

"aggregated selection of \"story_industries\""
type story_industries_aggregate { aggregate: story_industries_aggregate_fields
    nodes: [story_industries!]!
}

"aggregated selection of \"story_locations\""
type story_locations_aggregate { aggregate: story_locations_aggregate_fields
    nodes: [story_locations!]!
}

"aggregated selection of \"story_people\""
type story_people_aggregate { aggregate: story_people_aggregate_fields
    nodes: [story_people!]!
}

"aggregated selection of \"story_skills\""
type story_skills_aggregate { aggregate: story_skills_aggregate_fields
    nodes: [story_skills!]!
}

"aggregated selection of \"story_tags\""
type story_tags_aggregate { aggregate: story_tags_aggregate_fields
    nodes: [story_tags!]!
}

"aggregated selection of \"story_thumbnails\""
type story_thumbnails_aggregate { aggregate: story_thumbnails_aggregate_fields
    nodes: [story_thumbnails!]!
}

"aggregated selection of \"tag_companies\""
type tag_companies_aggregate { aggregate: tag_companies_aggregate_fields
    nodes: [tag_companies!]!
}

"aggregated selection of \"tag_industries\""
type tag_industries_aggregate { aggregate: tag_industries_aggregate_fields
    nodes: [tag_industries!]!
}

"aggregated selection of \"tag_people\""
type tag_people_aggregate { aggregate: tag_people_aggregate_fields
    nodes: [tag_people!]!
}

"aggregated selection of \"tag_rss_feeds\""
type tag_rss_feeds_aggregate { aggregate: tag_rss_feeds_aggregate_fields
    nodes: [tag_rss_feeds!]!
}

"aggregated selection of \"tag_stories\""
type tag_stories_aggregate { aggregate: tag_stories_aggregate_fields
    nodes: [tag_stories!]!
}

"aggregated selection of \"tags\""
type tags_aggregate { aggregate: tags_aggregate_fields
    nodes: [tags!]!
}

"columns and relationships of \"authors\""
type authors { bio: String
    id: Int!
    name: String!
    photo_url: String
    "An aggregate relationship"
    stories_aggregate("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): stories_aggregate!
    "An array relationship"
    stories("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): [stories!]!
}

"columns and relationships of \"companies\""
type companies { id: Int!
    name: String
    "An aggregate relationship"
    story_companies_aggregate("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): story_companies_aggregate!
    "An aggregate relationship"
    tag_companies_aggregate("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): tag_companies_aggregate!
    "An array relationship"
    story_companies("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): [story_companies!]!
    "An array relationship"
    tag_companies("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): [tag_companies!]!
}

"columns and relationships of \"industries\""
type industries { id: Int!
    name: String
    "An aggregate relationship"
    story_industries_aggregate("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): story_industries_aggregate!
    "An aggregate relationship"
    tag_industries_aggregate("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): tag_industries_aggregate!
    "An array relationship"
    story_industries("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): [story_industries!]!
    "An array relationship"
    tag_industries("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): [tag_industries!]!
}

"columns and relationships of \"locations\""
type locations { city: String
    country: String
    id: Int!
    name: String!
    semantic_id: String
    state: String
    "An aggregate relationship"
    story_locations_aggregate("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): story_locations_aggregate!
    "An array relationship"
    story_locations("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): [story_locations!]!
}

"columns and relationships of \"people\""
type people { id: Int!
    name: String!
    "An aggregate relationship"
    story_people_aggregate("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): story_people_aggregate!
    "An aggregate relationship"
    tag_people_aggregate("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): tag_people_aggregate!
    "An array relationship"
    story_people("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): [story_people!]!
    "An array relationship"
    tag_people("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): [tag_people!]!
}

"columns and relationships of \"rss_feeds\""
type rss_feeds { id: Int!
    is_local_news: Boolean!
    is_top_stories: Boolean!
    location_semantic_id: String
    source_id: Int
    title: String!
    url: String!
    "An aggregate relationship"
    stories_aggregate("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): stories_aggregate!
    "An aggregate relationship"
    tag_rss_feeds_aggregate("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): tag_rss_feeds_aggregate!
    "An array relationship"
    stories("filter the rows returned"
    where: stories_bool_exp, "sort the rows by one or more columns"
    order_by: [stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [stories_select_column!]): [stories!]!
    "An array relationship"
    tag_rss_feeds("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): [tag_rss_feeds!]!
    "An object relationship"
    source: sources
}

"columns and relationships of \"skills\""
type skills { id: Int!
    name: String!
    "An aggregate relationship"
    story_skills_aggregate("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): story_skills_aggregate!
    "An array relationship"
    story_skills("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): [story_skills!]!
}

"columns and relationships of \"sources\""
type sources { id: Int!
    logo_url: String
    name: String!
    "An aggregate relationship"
    rss_feeds_aggregate("filter the rows returned"
    where: rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [rss_feeds_select_column!]): rss_feeds_aggregate!
    "An array relationship"
    rss_feeds("filter the rows returned"
    where: rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [rss_feeds_select_column!]): [rss_feeds!]!
}

"columns and relationships of \"stories\""
type stories { author_id: Int
    content: String
    description: String!
    embedding: [float8!]
    guid: String!
    id: Int!
    is_permalink: Boolean!
    publication_date: timestamp!
    rss_feed_id: Int!
    summary: String
    title: String!
    url: String!
    vector_representation: String
    "An aggregate relationship"
    story_companies_aggregate("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): story_companies_aggregate!
    "An aggregate relationship"
    story_industries_aggregate("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): story_industries_aggregate!
    "An aggregate relationship"
    story_locations_aggregate("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): story_locations_aggregate!
    "An aggregate relationship"
    story_people_aggregate("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): story_people_aggregate!
    "An aggregate relationship"
    story_skills_aggregate("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): story_skills_aggregate!
    "An aggregate relationship"
    story_tags_aggregate("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): story_tags_aggregate!
    "An aggregate relationship"
    story_thumbnails_aggregate("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): story_thumbnails_aggregate!
    "An aggregate relationship"
    tag_stories_aggregate("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): tag_stories_aggregate!
    "An array relationship"
    story_companies("filter the rows returned"
    where: story_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [story_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_companies_select_column!]): [story_companies!]!
    "An array relationship"
    story_industries("filter the rows returned"
    where: story_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [story_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_industries_select_column!]): [story_industries!]!
    "An array relationship"
    story_locations("filter the rows returned"
    where: story_locations_bool_exp, "sort the rows by one or more columns"
    order_by: [story_locations_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_locations_select_column!]): [story_locations!]!
    "An array relationship"
    story_people("filter the rows returned"
    where: story_people_bool_exp, "sort the rows by one or more columns"
    order_by: [story_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_people_select_column!]): [story_people!]!
    "An array relationship"
    story_skills("filter the rows returned"
    where: story_skills_bool_exp, "sort the rows by one or more columns"
    order_by: [story_skills_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_skills_select_column!]): [story_skills!]!
    "An array relationship"
    story_tags("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): [story_tags!]!
    "An array relationship"
    story_thumbnails("filter the rows returned"
    where: story_thumbnails_bool_exp, "sort the rows by one or more columns"
    order_by: [story_thumbnails_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_thumbnails_select_column!]): [story_thumbnails!]!
    "An array relationship"
    tag_stories("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): [tag_stories!]!
    "An object relationship"
    author: authors
    "An object relationship"
    rss_feed: rss_feeds!
}

"columns and relationships of \"story_companies\""
type story_companies { company_id: Int!
    story_id: Int!
    "An object relationship"
    company: companies!
    "An object relationship"
    story: stories!
}

"columns and relationships of \"story_industries\""
type story_industries { industry_id: Int!
    story_id: Int!
    "An object relationship"
    industry: industries!
    "An object relationship"
    story: stories!
}

"columns and relationships of \"story_locations\""
type story_locations { location_id: Int!
    story_id: Int!
    "An object relationship"
    location: locations!
    "An object relationship"
    story: stories!
}

"columns and relationships of \"story_people\""
type story_people { person_id: Int!
    story_id: Int!
    "An object relationship"
    person: people!
    "An object relationship"
    story: stories!
}

"columns and relationships of \"story_skills\""
type story_skills { skill_id: Int!
    story_id: Int!
    "An object relationship"
    skill: skills!
    "An object relationship"
    story: stories!
}

"columns and relationships of \"story_tags\""
type story_tags { story_id: Int!
    tag_id: Int!
    "An object relationship"
    story: stories!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"story_thumbnails\""
type story_thumbnails { height: Int
    id: Int!
    story_id: Int!
    url: String!
    width: Int
    "An object relationship"
    story: stories!
}

"columns and relationships of \"tag_companies\""
type tag_companies { company_id: Int!
    tag_id: Int!
    "An object relationship"
    company: companies!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"tag_industries\""
type tag_industries { industry_id: Int!
    tag_id: Int!
    "An object relationship"
    industry: industries!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"tag_people\""
type tag_people { person_id: Int!
    tag_id: Int!
    "An object relationship"
    person: people!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"tag_rss_feeds\""
type tag_rss_feeds { rss_feed_id: Int!
    tag_id: Int!
    "An object relationship"
    rss_feed: rss_feeds!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"tag_stories\""
type tag_stories { story_id: Int!
    tag_id: Int!
    "An object relationship"
    story: stories!
    "An object relationship"
    tag: tags!
}

"columns and relationships of \"tags\""
type tags { id: Int!
    name: String!
    "An aggregate relationship"
    story_tags_aggregate("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): story_tags_aggregate!
    "An aggregate relationship"
    tag_companies_aggregate("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): tag_companies_aggregate!
    "An aggregate relationship"
    tag_industries_aggregate("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): tag_industries_aggregate!
    "An aggregate relationship"
    tag_people_aggregate("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): tag_people_aggregate!
    "An aggregate relationship"
    tag_rss_feeds_aggregate("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): tag_rss_feeds_aggregate!
    "An aggregate relationship"
    tag_stories_aggregate("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): tag_stories_aggregate!
    "An array relationship"
    story_tags("filter the rows returned"
    where: story_tags_bool_exp, "sort the rows by one or more columns"
    order_by: [story_tags_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [story_tags_select_column!]): [story_tags!]!
    "An array relationship"
    tag_companies("filter the rows returned"
    where: tag_companies_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_companies_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_companies_select_column!]): [tag_companies!]!
    "An array relationship"
    tag_industries("filter the rows returned"
    where: tag_industries_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_industries_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_industries_select_column!]): [tag_industries!]!
    "An array relationship"
    tag_people("filter the rows returned"
    where: tag_people_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_people_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_people_select_column!]): [tag_people!]!
    "An array relationship"
    tag_rss_feeds("filter the rows returned"
    where: tag_rss_feeds_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_rss_feeds_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_rss_feeds_select_column!]): [tag_rss_feeds!]!
    "An array relationship"
    tag_stories("filter the rows returned"
    where: tag_stories_bool_exp, "sort the rows by one or more columns"
    order_by: [tag_stories_order_by!], "limit the number of rows returned"
    limit: Int, "skip the first n rows. Use only with order_by"
    offset: Int, "distinct select on columns"
    distinct_on: [tag_stories_select_column!]): [tag_stories!]!
}

"mutation root"
type mutation_root { "delete data from the table: \"authors\""
delete_authors("filter the rows which have to be deleted"
where: authors_bool_exp!): authors_mutation_response
    "delete data from the table: \"companies\""
    delete_companies("filter the rows which have to be deleted"
    where: companies_bool_exp!): companies_mutation_response
    "delete data from the table: \"industries\""
    delete_industries("filter the rows which have to be deleted"
    where: industries_bool_exp!): industries_mutation_response
    "delete data from the table: \"locations\""
    delete_locations("filter the rows which have to be deleted"
    where: locations_bool_exp!): locations_mutation_response
    "delete data from the table: \"people\""
    delete_people("filter the rows which have to be deleted"
    where: people_bool_exp!): people_mutation_response
    "delete data from the table: \"rss_feeds\""
    delete_rss_feeds("filter the rows which have to be deleted"
    where: rss_feeds_bool_exp!): rss_feeds_mutation_response
    "delete data from the table: \"skills\""
    delete_skills("filter the rows which have to be deleted"
    where: skills_bool_exp!): skills_mutation_response
    "delete data from the table: \"sources\""
    delete_sources("filter the rows which have to be deleted"
    where: sources_bool_exp!): sources_mutation_response
    "delete data from the table: \"stories\""
    delete_stories("filter the rows which have to be deleted"
    where: stories_bool_exp!): stories_mutation_response
    "delete data from the table: \"story_companies\""
    delete_story_companies("filter the rows which have to be deleted"
    where: story_companies_bool_exp!): story_companies_mutation_response
    "delete data from the table: \"story_industries\""
    delete_story_industries("filter the rows which have to be deleted"
    where: story_industries_bool_exp!): story_industries_mutation_response
    "delete data from the table: \"story_locations\""
    delete_story_locations("filter the rows which have to be deleted"
    where: story_locations_bool_exp!): story_locations_mutation_response
    "delete data from the table: \"story_people\""
    delete_story_people("filter the rows which have to be deleted"
    where: story_people_bool_exp!): story_people_mutation_response
    "delete data from the table: \"story_skills\""
    delete_story_skills("filter the rows which have to be deleted"
    where: story_skills_bool_exp!): story_skills_mutation_response
    "delete data from the table: \"story_tags\""
    delete_story_tags("filter the rows which have to be deleted"
    where: story_tags_bool_exp!): story_tags_mutation_response
    "delete data from the table: \"story_thumbnails\""
    delete_story_thumbnails("filter the rows which have to be deleted"
    where: story_thumbnails_bool_exp!): story_thumbnails_mutation_response
    "delete data from the table: \"tag_companies\""
    delete_tag_companies("filter the rows which have to be deleted"
    where: tag_companies_bool_exp!): tag_companies_mutation_response
    "delete data from the table: \"tag_industries\""
    delete_tag_industries("filter the rows which have to be deleted"
    where: tag_industries_bool_exp!): tag_industries_mutation_response
    "delete data from the table: \"tag_people\""
    delete_tag_people("filter the rows which have to be deleted"
    where: tag_people_bool_exp!): tag_people_mutation_response
    "delete data from the table: \"tag_rss_feeds\""
    delete_tag_rss_feeds("filter the rows which have to be deleted"
    where: tag_rss_feeds_bool_exp!): tag_rss_feeds_mutation_response
    "delete data from the table: \"tag_stories\""
    delete_tag_stories("filter the rows which have to be deleted"
    where: tag_stories_bool_exp!): tag_stories_mutation_response
    "delete data from the table: \"tags\""
    delete_tags("filter the rows which have to be deleted"
    where: tags_bool_exp!): tags_mutation_response
    "delete single row from the table: \"authors\""
    delete_authors_by_pk(id: Int!): authors
    "delete single row from the table: \"companies\""
    delete_companies_by_pk(id: Int!): companies
    "delete single row from the table: \"industries\""
    delete_industries_by_pk(id: Int!): industries
    "delete single row from the table: \"locations\""
    delete_locations_by_pk(id: Int!): locations
    "delete single row from the table: \"people\""
    delete_people_by_pk(id: Int!): people
    "delete single row from the table: \"rss_feeds\""
    delete_rss_feeds_by_pk(id: Int!): rss_feeds
    "delete single row from the table: \"skills\""
    delete_skills_by_pk(id: Int!): skills
    "delete single row from the table: \"sources\""
    delete_sources_by_pk(id: Int!): sources
    "delete single row from the table: \"stories\""
    delete_stories_by_pk(id: Int!): stories
    "delete single row from the table: \"story_companies\""
    delete_story_companies_by_pk(story_id: Int!, company_id: Int!): story_companies
    "delete single row from the table: \"story_industries\""
    delete_story_industries_by_pk(story_id: Int!, industry_id: Int!): story_industries
    "delete single row from the table: \"story_locations\""
    delete_story_locations_by_pk(story_id: Int!, location_id: Int!): story_locations
    "delete single row from the table: \"story_people\""
    delete_story_people_by_pk(story_id: Int!, person_id: Int!): story_people
    "delete single row from the table: \"story_skills\""
    delete_story_skills_by_pk(story_id: Int!, skill_id: Int!): story_skills
    "delete single row from the table: \"story_tags\""
    delete_story_tags_by_pk(story_id: Int!, tag_id: Int!): story_tags
    "delete single row from the table: \"story_thumbnails\""
    delete_story_thumbnails_by_pk(id: Int!): story_thumbnails
    "delete single row from the table: \"tag_companies\""
    delete_tag_companies_by_pk(tag_id: Int!, company_id: Int!): tag_companies
    "delete single row from the table: \"tag_industries\""
    delete_tag_industries_by_pk(tag_id: Int!, industry_id: Int!): tag_industries
    "delete single row from the table: \"tag_people\""
    delete_tag_people_by_pk(tag_id: Int!, person_id: Int!): tag_people
    "delete single row from the table: \"tag_rss_feeds\""
    delete_tag_rss_feeds_by_pk(tag_id: Int!, rss_feed_id: Int!): tag_rss_feeds
    "delete single row from the table: \"tag_stories\""
    delete_tag_stories_by_pk(tag_id: Int!, story_id: Int!): tag_stories
    "delete single row from the table: \"tags\""
    delete_tags_by_pk(id: Int!): tags
    "insert a single row into the table: \"authors\""
    insert_authors_one("upsert condition"
    on_conflict: authors_on_conflict, "the row to be inserted"
    object: authors_insert_input!): authors
    "insert a single row into the table: \"companies\""
    insert_companies_one("upsert condition"
    on_conflict: companies_on_conflict, "the row to be inserted"
    object: companies_insert_input!): companies
    "insert a single row into the table: \"industries\""
    insert_industries_one("upsert condition"
    on_conflict: industries_on_conflict, "the row to be inserted"
    object: industries_insert_input!): industries
    "insert a single row into the table: \"locations\""
    insert_locations_one("upsert condition"
    on_conflict: locations_on_conflict, "the row to be inserted"
    object: locations_insert_input!): locations
    "insert a single row into the table: \"people\""
    insert_people_one("upsert condition"
    on_conflict: people_on_conflict, "the row to be inserted"
    object: people_insert_input!): people
    "insert a single row into the table: \"rss_feeds\""
    insert_rss_feeds_one("upsert condition"
    on_conflict: rss_feeds_on_conflict, "the row to be inserted"
    object: rss_feeds_insert_input!): rss_feeds
    "insert a single row into the table: \"skills\""
    insert_skills_one("upsert condition"
    on_conflict: skills_on_conflict, "the row to be inserted"
    object: skills_insert_input!): skills
    "insert a single row into the table: \"sources\""
    insert_sources_one("upsert condition"
    on_conflict: sources_on_conflict, "the row to be inserted"
    object: sources_insert_input!): sources
    "insert a single row into the table: \"stories\""
    insert_stories_one("upsert condition"
    on_conflict: stories_on_conflict, "the row to be inserted"
    object: stories_insert_input!): stories
    "insert a single row into the table: \"story_companies\""
    insert_story_companies_one("upsert condition"
    on_conflict: story_companies_on_conflict, "the row to be inserted"
    object: story_companies_insert_input!): story_companies
    "insert a single row into the table: \"story_industries\""
    insert_story_industries_one("upsert condition"
    on_conflict: story_industries_on_conflict, "the row to be inserted"
    object: story_industries_insert_input!): story_industries
    "insert a single row into the table: \"story_locations\""
    insert_story_locations_one("upsert condition"
    on_conflict: story_locations_on_conflict, "the row to be inserted"
    object: story_locations_insert_input!): story_locations
    "insert a single row into the table: \"story_people\""
    insert_story_people_one("upsert condition"
    on_conflict: story_people_on_conflict, "the row to be inserted"
    object: story_people_insert_input!): story_people
    "insert a single row into the table: \"story_skills\""
    insert_story_skills_one("upsert condition"
    on_conflict: story_skills_on_conflict, "the row to be inserted"
    object: story_skills_insert_input!): story_skills
    "insert a single row into the table: \"story_tags\""
    insert_story_tags_one("upsert condition"
    on_conflict: story_tags_on_conflict, "the row to be inserted"
    object: story_tags_insert_input!): story_tags
    "insert a single row into the table: \"story_thumbnails\""
    insert_story_thumbnails_one("upsert condition"
    on_conflict: story_thumbnails_on_conflict, "the row to be inserted"
    object: story_thumbnails_insert_input!): story_thumbnails
    "insert a single row into the table: \"tag_companies\""
    insert_tag_companies_one("upsert condition"
    on_conflict: tag_companies_on_conflict, "the row to be inserted"
    object: tag_companies_insert_input!): tag_companies
    "insert a single row into the table: \"tag_industries\""
    insert_tag_industries_one("upsert condition"
    on_conflict: tag_industries_on_conflict, "the row to be inserted"
    object: tag_industries_insert_input!): tag_industries
    "insert a single row into the table: \"tag_people\""
    insert_tag_people_one("upsert condition"
    on_conflict: tag_people_on_conflict, "the row to be inserted"
    object: tag_people_insert_input!): tag_people
    "insert a single row into the table: \"tag_rss_feeds\""
    insert_tag_rss_feeds_one("upsert condition"
    on_conflict: tag_rss_feeds_on_conflict, "the row to be inserted"
    object: tag_rss_feeds_insert_input!): tag_rss_feeds
    "insert a single row into the table: \"tag_stories\""
    insert_tag_stories_one("upsert condition"
    on_conflict: tag_stories_on_conflict, "the row to be inserted"
    object: tag_stories_insert_input!): tag_stories
    "insert a single row into the table: \"tags\""
    insert_tags_one("upsert condition"
    on_conflict: tags_on_conflict, "the row to be inserted"
    object: tags_insert_input!): tags
    "insert data into the table: \"authors\""
    insert_authors("upsert condition"
    on_conflict: authors_on_conflict, "the rows to be inserted"
    objects: [authors_insert_input!]!): authors_mutation_response
    "insert data into the table: \"companies\""
    insert_companies("upsert condition"
    on_conflict: companies_on_conflict, "the rows to be inserted"
    objects: [companies_insert_input!]!): companies_mutation_response
    "insert data into the table: \"industries\""
    insert_industries("upsert condition"
    on_conflict: industries_on_conflict, "the rows to be inserted"
    objects: [industries_insert_input!]!): industries_mutation_response
    "insert data into the table: \"locations\""
    insert_locations("upsert condition"
    on_conflict: locations_on_conflict, "the rows to be inserted"
    objects: [locations_insert_input!]!): locations_mutation_response
    "insert data into the table: \"people\""
    insert_people("upsert condition"
    on_conflict: people_on_conflict, "the rows to be inserted"
    objects: [people_insert_input!]!): people_mutation_response
    "insert data into the table: \"rss_feeds\""
    insert_rss_feeds("upsert condition"
    on_conflict: rss_feeds_on_conflict, "the rows to be inserted"
    objects: [rss_feeds_insert_input!]!): rss_feeds_mutation_response
    "insert data into the table: \"skills\""
    insert_skills("upsert condition"
    on_conflict: skills_on_conflict, "the rows to be inserted"
    objects: [skills_insert_input!]!): skills_mutation_response
    "insert data into the table: \"sources\""
    insert_sources("upsert condition"
    on_conflict: sources_on_conflict, "the rows to be inserted"
    objects: [sources_insert_input!]!): sources_mutation_response
    "insert data into the table: \"stories\""
    insert_stories("upsert condition"
    on_conflict: stories_on_conflict, "the rows to be inserted"
    objects: [stories_insert_input!]!): stories_mutation_response
    "insert data into the table: \"story_companies\""
    insert_story_companies("upsert condition"
    on_conflict: story_companies_on_conflict, "the rows to be inserted"
    objects: [story_companies_insert_input!]!): story_companies_mutation_response
    "insert data into the table: \"story_industries\""
    insert_story_industries("upsert condition"
    on_conflict: story_industries_on_conflict, "the rows to be inserted"
    objects: [story_industries_insert_input!]!): story_industries_mutation_response
    "insert data into the table: \"story_locations\""
    insert_story_locations("upsert condition"
    on_conflict: story_locations_on_conflict, "the rows to be inserted"
    objects: [story_locations_insert_input!]!): story_locations_mutation_response
    "insert data into the table: \"story_people\""
    insert_story_people("upsert condition"
    on_conflict: story_people_on_conflict, "the rows to be inserted"
    objects: [story_people_insert_input!]!): story_people_mutation_response
    "insert data into the table: \"story_skills\""
    insert_story_skills("upsert condition"
    on_conflict: story_skills_on_conflict, "the rows to be inserted"
    objects: [story_skills_insert_input!]!): story_skills_mutation_response
    "insert data into the table: \"story_tags\""
    insert_story_tags("upsert condition"
    on_conflict: story_tags_on_conflict, "the rows to be inserted"
    objects: [story_tags_insert_input!]!): story_tags_mutation_response
    "insert data into the table: \"story_thumbnails\""
    insert_story_thumbnails("upsert condition"
    on_conflict: story_thumbnails_on_conflict, "the rows to be inserted"
    objects: [story_thumbnails_insert_input!]!): story_thumbnails_mutation_response
    "insert data into the table: \"tag_companies\""
    insert_tag_companies("upsert condition"
    on_conflict: tag_companies_on_conflict, "the rows to be inserted"
    objects: [tag_companies_insert_input!]!): tag_companies_mutation_response
    "insert data into the table: \"tag_industries\""
    insert_tag_industries("upsert condition"
    on_conflict: tag_industries_on_conflict, "the rows to be inserted"
    objects: [tag_industries_insert_input!]!): tag_industries_mutation_response
    "insert data into the table: \"tag_people\""
    insert_tag_people("upsert condition"
    on_conflict: tag_people_on_conflict, "the rows to be inserted"
    objects: [tag_people_insert_input!]!): tag_people_mutation_response
    "insert data into the table: \"tag_rss_feeds\""
    insert_tag_rss_feeds("upsert condition"
    on_conflict: tag_rss_feeds_on_conflict, "the rows to be inserted"
    objects: [tag_rss_feeds_insert_input!]!): tag_rss_feeds_mutation_response
    "insert data into the table: \"tag_stories\""
    insert_tag_stories("upsert condition"
    on_conflict: tag_stories_on_conflict, "the rows to be inserted"
    objects: [tag_stories_insert_input!]!): tag_stories_mutation_response
    "insert data into the table: \"tags\""
    insert_tags("upsert condition"
    on_conflict: tags_on_conflict, "the rows to be inserted"
    objects: [tags_insert_input!]!): tags_mutation_response
    "update data of the table: \"authors\""
    update_authors("sets the columns of the filtered rows to the given values"
    _set: authors_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: authors_inc_input, "filter the rows which have to be updated"
    where: authors_bool_exp!): authors_mutation_response
    "update data of the table: \"companies\""
    update_companies("sets the columns of the filtered rows to the given values"
    _set: companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: companies_inc_input, "filter the rows which have to be updated"
    where: companies_bool_exp!): companies_mutation_response
    "update data of the table: \"industries\""
    update_industries("sets the columns of the filtered rows to the given values"
    _set: industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: industries_inc_input, "filter the rows which have to be updated"
    where: industries_bool_exp!): industries_mutation_response
    "update data of the table: \"locations\""
    update_locations("sets the columns of the filtered rows to the given values"
    _set: locations_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: locations_inc_input, "filter the rows which have to be updated"
    where: locations_bool_exp!): locations_mutation_response
    "update data of the table: \"people\""
    update_people("sets the columns of the filtered rows to the given values"
    _set: people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: people_inc_input, "filter the rows which have to be updated"
    where: people_bool_exp!): people_mutation_response
    "update data of the table: \"rss_feeds\""
    update_rss_feeds("sets the columns of the filtered rows to the given values"
    _set: rss_feeds_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: rss_feeds_inc_input, "filter the rows which have to be updated"
    where: rss_feeds_bool_exp!): rss_feeds_mutation_response
    "update data of the table: \"skills\""
    update_skills("sets the columns of the filtered rows to the given values"
    _set: skills_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: skills_inc_input, "filter the rows which have to be updated"
    where: skills_bool_exp!): skills_mutation_response
    "update data of the table: \"sources\""
    update_sources("sets the columns of the filtered rows to the given values"
    _set: sources_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: sources_inc_input, "filter the rows which have to be updated"
    where: sources_bool_exp!): sources_mutation_response
    "update data of the table: \"stories\""
    update_stories("sets the columns of the filtered rows to the given values"
    _set: stories_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: stories_inc_input, "filter the rows which have to be updated"
    where: stories_bool_exp!): stories_mutation_response
    "update data of the table: \"story_companies\""
    update_story_companies("sets the columns of the filtered rows to the given values"
    _set: story_companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_companies_inc_input, "filter the rows which have to be updated"
    where: story_companies_bool_exp!): story_companies_mutation_response
    "update data of the table: \"story_industries\""
    update_story_industries("sets the columns of the filtered rows to the given values"
    _set: story_industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_industries_inc_input, "filter the rows which have to be updated"
    where: story_industries_bool_exp!): story_industries_mutation_response
    "update data of the table: \"story_locations\""
    update_story_locations("sets the columns of the filtered rows to the given values"
    _set: story_locations_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_locations_inc_input, "filter the rows which have to be updated"
    where: story_locations_bool_exp!): story_locations_mutation_response
    "update data of the table: \"story_people\""
    update_story_people("sets the columns of the filtered rows to the given values"
    _set: story_people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_people_inc_input, "filter the rows which have to be updated"
    where: story_people_bool_exp!): story_people_mutation_response
    "update data of the table: \"story_skills\""
    update_story_skills("sets the columns of the filtered rows to the given values"
    _set: story_skills_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_skills_inc_input, "filter the rows which have to be updated"
    where: story_skills_bool_exp!): story_skills_mutation_response
    "update data of the table: \"story_tags\""
    update_story_tags("sets the columns of the filtered rows to the given values"
    _set: story_tags_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_tags_inc_input, "filter the rows which have to be updated"
    where: story_tags_bool_exp!): story_tags_mutation_response
    "update data of the table: \"story_thumbnails\""
    update_story_thumbnails("sets the columns of the filtered rows to the given values"
    _set: story_thumbnails_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_thumbnails_inc_input, "filter the rows which have to be updated"
    where: story_thumbnails_bool_exp!): story_thumbnails_mutation_response
    "update data of the table: \"tag_companies\""
    update_tag_companies("sets the columns of the filtered rows to the given values"
    _set: tag_companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_companies_inc_input, "filter the rows which have to be updated"
    where: tag_companies_bool_exp!): tag_companies_mutation_response
    "update data of the table: \"tag_industries\""
    update_tag_industries("sets the columns of the filtered rows to the given values"
    _set: tag_industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_industries_inc_input, "filter the rows which have to be updated"
    where: tag_industries_bool_exp!): tag_industries_mutation_response
    "update data of the table: \"tag_people\""
    update_tag_people("sets the columns of the filtered rows to the given values"
    _set: tag_people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_people_inc_input, "filter the rows which have to be updated"
    where: tag_people_bool_exp!): tag_people_mutation_response
    "update data of the table: \"tag_rss_feeds\""
    update_tag_rss_feeds("sets the columns of the filtered rows to the given values"
    _set: tag_rss_feeds_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_rss_feeds_inc_input, "filter the rows which have to be updated"
    where: tag_rss_feeds_bool_exp!): tag_rss_feeds_mutation_response
    "update data of the table: \"tag_stories\""
    update_tag_stories("sets the columns of the filtered rows to the given values"
    _set: tag_stories_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_stories_inc_input, "filter the rows which have to be updated"
    where: tag_stories_bool_exp!): tag_stories_mutation_response
    "update data of the table: \"tags\""
    update_tags("sets the columns of the filtered rows to the given values"
    _set: tags_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tags_inc_input, "filter the rows which have to be updated"
    where: tags_bool_exp!): tags_mutation_response
    "update multiples rows of table: \"authors\""
    update_authors_many("updates to execute, in order"
    updates: [authors_updates!]!): [authors_mutation_response]
    "update multiples rows of table: \"companies\""
    update_companies_many("updates to execute, in order"
    updates: [companies_updates!]!): [companies_mutation_response]
    "update multiples rows of table: \"industries\""
    update_industries_many("updates to execute, in order"
    updates: [industries_updates!]!): [industries_mutation_response]
    "update multiples rows of table: \"locations\""
    update_locations_many("updates to execute, in order"
    updates: [locations_updates!]!): [locations_mutation_response]
    "update multiples rows of table: \"people\""
    update_people_many("updates to execute, in order"
    updates: [people_updates!]!): [people_mutation_response]
    "update multiples rows of table: \"rss_feeds\""
    update_rss_feeds_many("updates to execute, in order"
    updates: [rss_feeds_updates!]!): [rss_feeds_mutation_response]
    "update multiples rows of table: \"skills\""
    update_skills_many("updates to execute, in order"
    updates: [skills_updates!]!): [skills_mutation_response]
    "update multiples rows of table: \"sources\""
    update_sources_many("updates to execute, in order"
    updates: [sources_updates!]!): [sources_mutation_response]
    "update multiples rows of table: \"stories\""
    update_stories_many("updates to execute, in order"
    updates: [stories_updates!]!): [stories_mutation_response]
    "update multiples rows of table: \"story_companies\""
    update_story_companies_many("updates to execute, in order"
    updates: [story_companies_updates!]!): [story_companies_mutation_response]
    "update multiples rows of table: \"story_industries\""
    update_story_industries_many("updates to execute, in order"
    updates: [story_industries_updates!]!): [story_industries_mutation_response]
    "update multiples rows of table: \"story_locations\""
    update_story_locations_many("updates to execute, in order"
    updates: [story_locations_updates!]!): [story_locations_mutation_response]
    "update multiples rows of table: \"story_people\""
    update_story_people_many("updates to execute, in order"
    updates: [story_people_updates!]!): [story_people_mutation_response]
    "update multiples rows of table: \"story_skills\""
    update_story_skills_many("updates to execute, in order"
    updates: [story_skills_updates!]!): [story_skills_mutation_response]
    "update multiples rows of table: \"story_tags\""
    update_story_tags_many("updates to execute, in order"
    updates: [story_tags_updates!]!): [story_tags_mutation_response]
    "update multiples rows of table: \"story_thumbnails\""
    update_story_thumbnails_many("updates to execute, in order"
    updates: [story_thumbnails_updates!]!): [story_thumbnails_mutation_response]
    "update multiples rows of table: \"tag_companies\""
    update_tag_companies_many("updates to execute, in order"
    updates: [tag_companies_updates!]!): [tag_companies_mutation_response]
    "update multiples rows of table: \"tag_industries\""
    update_tag_industries_many("updates to execute, in order"
    updates: [tag_industries_updates!]!): [tag_industries_mutation_response]
    "update multiples rows of table: \"tag_people\""
    update_tag_people_many("updates to execute, in order"
    updates: [tag_people_updates!]!): [tag_people_mutation_response]
    "update multiples rows of table: \"tag_rss_feeds\""
    update_tag_rss_feeds_many("updates to execute, in order"
    updates: [tag_rss_feeds_updates!]!): [tag_rss_feeds_mutation_response]
    "update multiples rows of table: \"tag_stories\""
    update_tag_stories_many("updates to execute, in order"
    updates: [tag_stories_updates!]!): [tag_stories_mutation_response]
    "update multiples rows of table: \"tags\""
    update_tags_many("updates to execute, in order"
    updates: [tags_updates!]!): [tags_mutation_response]
    "update single row of the table: \"authors\""
    update_authors_by_pk("sets the columns of the filtered rows to the given values"
    _set: authors_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: authors_inc_input, pk_columns: authors_pk_columns_input!): authors
    "update single row of the table: \"companies\""
    update_companies_by_pk("sets the columns of the filtered rows to the given values"
    _set: companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: companies_inc_input, pk_columns: companies_pk_columns_input!): companies
    "update single row of the table: \"industries\""
    update_industries_by_pk("sets the columns of the filtered rows to the given values"
    _set: industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: industries_inc_input, pk_columns: industries_pk_columns_input!): industries
    "update single row of the table: \"locations\""
    update_locations_by_pk("sets the columns of the filtered rows to the given values"
    _set: locations_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: locations_inc_input, pk_columns: locations_pk_columns_input!): locations
    "update single row of the table: \"people\""
    update_people_by_pk("sets the columns of the filtered rows to the given values"
    _set: people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: people_inc_input, pk_columns: people_pk_columns_input!): people
    "update single row of the table: \"rss_feeds\""
    update_rss_feeds_by_pk("sets the columns of the filtered rows to the given values"
    _set: rss_feeds_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: rss_feeds_inc_input, pk_columns: rss_feeds_pk_columns_input!): rss_feeds
    "update single row of the table: \"skills\""
    update_skills_by_pk("sets the columns of the filtered rows to the given values"
    _set: skills_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: skills_inc_input, pk_columns: skills_pk_columns_input!): skills
    "update single row of the table: \"sources\""
    update_sources_by_pk("sets the columns of the filtered rows to the given values"
    _set: sources_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: sources_inc_input, pk_columns: sources_pk_columns_input!): sources
    "update single row of the table: \"stories\""
    update_stories_by_pk("sets the columns of the filtered rows to the given values"
    _set: stories_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: stories_inc_input, pk_columns: stories_pk_columns_input!): stories
    "update single row of the table: \"story_companies\""
    update_story_companies_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_companies_inc_input, pk_columns: story_companies_pk_columns_input!): story_companies
    "update single row of the table: \"story_industries\""
    update_story_industries_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_industries_inc_input, pk_columns: story_industries_pk_columns_input!): story_industries
    "update single row of the table: \"story_locations\""
    update_story_locations_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_locations_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_locations_inc_input, pk_columns: story_locations_pk_columns_input!): story_locations
    "update single row of the table: \"story_people\""
    update_story_people_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_people_inc_input, pk_columns: story_people_pk_columns_input!): story_people
    "update single row of the table: \"story_skills\""
    update_story_skills_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_skills_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_skills_inc_input, pk_columns: story_skills_pk_columns_input!): story_skills
    "update single row of the table: \"story_tags\""
    update_story_tags_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_tags_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_tags_inc_input, pk_columns: story_tags_pk_columns_input!): story_tags
    "update single row of the table: \"story_thumbnails\""
    update_story_thumbnails_by_pk("sets the columns of the filtered rows to the given values"
    _set: story_thumbnails_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: story_thumbnails_inc_input, pk_columns: story_thumbnails_pk_columns_input!): story_thumbnails
    "update single row of the table: \"tag_companies\""
    update_tag_companies_by_pk("sets the columns of the filtered rows to the given values"
    _set: tag_companies_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_companies_inc_input, pk_columns: tag_companies_pk_columns_input!): tag_companies
    "update single row of the table: \"tag_industries\""
    update_tag_industries_by_pk("sets the columns of the filtered rows to the given values"
    _set: tag_industries_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_industries_inc_input, pk_columns: tag_industries_pk_columns_input!): tag_industries
    "update single row of the table: \"tag_people\""
    update_tag_people_by_pk("sets the columns of the filtered rows to the given values"
    _set: tag_people_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_people_inc_input, pk_columns: tag_people_pk_columns_input!): tag_people
    "update single row of the table: \"tag_rss_feeds\""
    update_tag_rss_feeds_by_pk("sets the columns of the filtered rows to the given values"
    _set: tag_rss_feeds_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_rss_feeds_inc_input, pk_columns: tag_rss_feeds_pk_columns_input!): tag_rss_feeds
    "update single row of the table: \"tag_stories\""
    update_tag_stories_by_pk("sets the columns of the filtered rows to the given values"
    _set: tag_stories_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tag_stories_inc_input, pk_columns: tag_stories_pk_columns_input!): tag_stories
    "update single row of the table: \"tags\""
    update_tags_by_pk("sets the columns of the filtered rows to the given values"
    _set: tags_set_input, "increments the numeric columns with given value of the filtered values"
    _inc: tags_inc_input, pk_columns: tags_pk_columns_input!): tags
}

"response of any mutation on the table \"authors\""
type authors_mutation_response { "data from the rows affected by the mutation"
returning: [authors!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"companies\""
type companies_mutation_response { "data from the rows affected by the mutation"
returning: [companies!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"industries\""
type industries_mutation_response { "data from the rows affected by the mutation"
returning: [industries!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"locations\""
type locations_mutation_response { "data from the rows affected by the mutation"
returning: [locations!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"people\""
type people_mutation_response { "data from the rows affected by the mutation"
returning: [people!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"rss_feeds\""
type rss_feeds_mutation_response { "data from the rows affected by the mutation"
returning: [rss_feeds!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"skills\""
type skills_mutation_response { "data from the rows affected by the mutation"
returning: [skills!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"sources\""
type sources_mutation_response { "data from the rows affected by the mutation"
returning: [sources!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"stories\""
type stories_mutation_response { "data from the rows affected by the mutation"
returning: [stories!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_companies\""
type story_companies_mutation_response { "data from the rows affected by the mutation"
returning: [story_companies!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_industries\""
type story_industries_mutation_response { "data from the rows affected by the mutation"
returning: [story_industries!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_locations\""
type story_locations_mutation_response { "data from the rows affected by the mutation"
returning: [story_locations!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_people\""
type story_people_mutation_response { "data from the rows affected by the mutation"
returning: [story_people!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_skills\""
type story_skills_mutation_response { "data from the rows affected by the mutation"
returning: [story_skills!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_tags\""
type story_tags_mutation_response { "data from the rows affected by the mutation"
returning: [story_tags!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"story_thumbnails\""
type story_thumbnails_mutation_response { "data from the rows affected by the mutation"
returning: [story_thumbnails!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tag_companies\""
type tag_companies_mutation_response { "data from the rows affected by the mutation"
returning: [tag_companies!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tag_industries\""
type tag_industries_mutation_response { "data from the rows affected by the mutation"
returning: [tag_industries!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tag_people\""
type tag_people_mutation_response { "data from the rows affected by the mutation"
returning: [tag_people!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tag_rss_feeds\""
type tag_rss_feeds_mutation_response { "data from the rows affected by the mutation"
returning: [tag_rss_feeds!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tag_stories\""
type tag_stories_mutation_response { "data from the rows affected by the mutation"
returning: [tag_stories!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

"response of any mutation on the table \"tags\""
type tags_mutation_response { "data from the rows affected by the mutation"
returning: [tags!]!
    "number of rows affected by the mutation"
    affected_rows: Int!
}

enum __TypeKind {ENUM
    INPUT_OBJECT
    INTERFACE
    LIST
    NON_NULL
    OBJECT
    SCALAR
    UNION
}

"column ordering options"
enum order_by {"in ascending order, nulls first"
asc_nulls_first
    "in ascending order, nulls last"
    asc
    "in ascending order, nulls last"
    asc_nulls_last
    "in descending order, nulls first"
    desc
    "in descending order, nulls first"
    desc_nulls_first
    "in descending order, nulls last"
    desc_nulls_last
}

"ordering argument of a cursor"
enum cursor_ordering {"ascending ordering of the cursor"
ASC
    "descending ordering of the cursor"
    DESC
}

"select \"rss_feeds_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"rss_feeds\""
enum rss_feeds_select_column_rss_feeds_aggregate_bool_exp_bool_and_arguments_columns {"column name"
is_local_news
    "column name"
    is_top_stories
}

"select \"rss_feeds_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"rss_feeds\""
enum rss_feeds_select_column_rss_feeds_aggregate_bool_exp_bool_or_arguments_columns {"column name"
is_local_news
    "column name"
    is_top_stories
}

"select \"stories_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"stories\""
enum stories_select_column_stories_aggregate_bool_exp_bool_and_arguments_columns {"column name"
is_permalink
}

"select \"stories_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"stories\""
enum stories_select_column_stories_aggregate_bool_exp_bool_or_arguments_columns {"column name"
is_permalink
}

"select columns of table \"authors\""
enum authors_select_column {"column name"
bio
    "column name"
    id
    "column name"
    name
    "column name"
    photo_url
}

"select columns of table \"companies\""
enum companies_select_column {"column name"
id
    "column name"
    name
}

"select columns of table \"industries\""
enum industries_select_column {"column name"
id
    "column name"
    name
}

"select columns of table \"locations\""
enum locations_select_column {"column name"
city
    "column name"
    country
    "column name"
    id
    "column name"
    name
    "column name"
    semantic_id
    "column name"
    state
}

"select columns of table \"people\""
enum people_select_column {"column name"
id
    "column name"
    name
}

"select columns of table \"rss_feeds\""
enum rss_feeds_select_column {"column name"
id
    "column name"
    is_local_news
    "column name"
    is_top_stories
    "column name"
    location_semantic_id
    "column name"
    source_id
    "column name"
    title
    "column name"
    url
}

"select columns of table \"skills\""
enum skills_select_column {"column name"
id
    "column name"
    name
}

"select columns of table \"sources\""
enum sources_select_column {"column name"
id
    "column name"
    logo_url
    "column name"
    name
}

"select columns of table \"stories\""
enum stories_select_column {"column name"
author_id
    "column name"
    content
    "column name"
    description
    "column name"
    embedding
    "column name"
    guid
    "column name"
    id
    "column name"
    is_permalink
    "column name"
    publication_date
    "column name"
    rss_feed_id
    "column name"
    summary
    "column name"
    title
    "column name"
    url
    "column name"
    vector_representation
}

"select columns of table \"story_companies\""
enum story_companies_select_column {"column name"
company_id
    "column name"
    story_id
}

"select columns of table \"story_industries\""
enum story_industries_select_column {"column name"
industry_id
    "column name"
    story_id
}

"select columns of table \"story_locations\""
enum story_locations_select_column {"column name"
location_id
    "column name"
    story_id
}

"select columns of table \"story_people\""
enum story_people_select_column {"column name"
person_id
    "column name"
    story_id
}

"select columns of table \"story_skills\""
enum story_skills_select_column {"column name"
skill_id
    "column name"
    story_id
}

"select columns of table \"story_tags\""
enum story_tags_select_column {"column name"
story_id
    "column name"
    tag_id
}

"select columns of table \"story_thumbnails\""
enum story_thumbnails_select_column {"column name"
height
    "column name"
    id
    "column name"
    story_id
    "column name"
    url
    "column name"
    width
}

"select columns of table \"tag_companies\""
enum tag_companies_select_column {"column name"
company_id
    "column name"
    tag_id
}

"select columns of table \"tag_industries\""
enum tag_industries_select_column {"column name"
industry_id
    "column name"
    tag_id
}

"select columns of table \"tag_people\""
enum tag_people_select_column {"column name"
person_id
    "column name"
    tag_id
}

"select columns of table \"tag_rss_feeds\""
enum tag_rss_feeds_select_column {"column name"
rss_feed_id
    "column name"
    tag_id
}

"select columns of table \"tag_stories\""
enum tag_stories_select_column {"column name"
story_id
    "column name"
    tag_id
}

"select columns of table \"tags\""
enum tags_select_column {"column name"
id
    "column name"
    name
}

"unique or primary key constraints on table \"authors\""
enum authors_constraint {"unique or primary key constraint on columns \"id\""
authors_pkey
}

"unique or primary key constraints on table \"companies\""
enum companies_constraint {"unique or primary key constraint on columns \"id\""
companies_pkey
}

"unique or primary key constraints on table \"industries\""
enum industries_constraint {"unique or primary key constraint on columns \"id\""
industries_pkey
}

"unique or primary key constraints on table \"locations\""
enum locations_constraint {"unique or primary key constraint on columns \"id\""
locations_pkey
}

"unique or primary key constraints on table \"people\""
enum people_constraint {"unique or primary key constraint on columns \"id\""
people_pkey
}

"unique or primary key constraints on table \"rss_feeds\""
enum rss_feeds_constraint {"unique or primary key constraint on columns \"id\""
rss_feeds_pkey
}

"unique or primary key constraints on table \"skills\""
enum skills_constraint {"unique or primary key constraint on columns \"id\""
skills_pkey
}

"unique or primary key constraints on table \"sources\""
enum sources_constraint {"unique or primary key constraint on columns \"id\""
sources_pkey
}

"unique or primary key constraints on table \"stories\""
enum stories_constraint {"unique or primary key constraint on columns \"id\""
stories_pkey
}

"unique or primary key constraints on table \"story_companies\""
enum story_companies_constraint {"unique or primary key constraint on columns \"story_id\", \"company_id\""
story_companies_pkey
}

"unique or primary key constraints on table \"story_industries\""
enum story_industries_constraint {"unique or primary key constraint on columns \"story_id\", \"industry_id\""
story_industries_pkey
}

"unique or primary key constraints on table \"story_locations\""
enum story_locations_constraint {"unique or primary key constraint on columns \"story_id\", \"location_id\""
story_locations_pkey
}

"unique or primary key constraints on table \"story_people\""
enum story_people_constraint {"unique or primary key constraint on columns \"story_id\", \"person_id\""
story_people_pkey
}

"unique or primary key constraints on table \"story_skills\""
enum story_skills_constraint {"unique or primary key constraint on columns \"story_id\", \"skill_id\""
story_skills_pkey
}

"unique or primary key constraints on table \"story_tags\""
enum story_tags_constraint {"unique or primary key constraint on columns \"story_id\", \"tag_id\""
story_tags_pkey
}

"unique or primary key constraints on table \"story_thumbnails\""
enum story_thumbnails_constraint {"unique or primary key constraint on columns \"id\""
story_thumbnails_pkey
}

"unique or primary key constraints on table \"tag_companies\""
enum tag_companies_constraint {"unique or primary key constraint on columns \"company_id\", \"tag_id\""
tag_companies_pkey
}

"unique or primary key constraints on table \"tag_industries\""
enum tag_industries_constraint {"unique or primary key constraint on columns \"industry_id\", \"tag_id\""
tag_industries_pkey
}

"unique or primary key constraints on table \"tag_people\""
enum tag_people_constraint {"unique or primary key constraint on columns \"tag_id\", \"person_id\""
tag_people_pkey
}

"unique or primary key constraints on table \"tag_rss_feeds\""
enum tag_rss_feeds_constraint {"unique or primary key constraint on columns \"rss_feed_id\", \"tag_id\""
tag_rss_feeds_pkey
}

"unique or primary key constraints on table \"tag_stories\""
enum tag_stories_constraint {"unique or primary key constraint on columns \"story_id\", \"tag_id\""
tag_stories_pkey
}

"unique or primary key constraints on table \"tags\""
enum tags_constraint {"unique or primary key constraint on columns \"id\""
tags_pkey
}

"update columns of table \"authors\""
enum authors_update_column {"column name"
bio
    "column name"
    id
    "column name"
    name
    "column name"
    photo_url
}

"update columns of table \"companies\""
enum companies_update_column {"column name"
id
    "column name"
    name
}

"update columns of table \"industries\""
enum industries_update_column {"column name"
id
    "column name"
    name
}

"update columns of table \"locations\""
enum locations_update_column {"column name"
city
    "column name"
    country
    "column name"
    id
    "column name"
    name
    "column name"
    semantic_id
    "column name"
    state
}

"update columns of table \"people\""
enum people_update_column {"column name"
id
    "column name"
    name
}

"update columns of table \"rss_feeds\""
enum rss_feeds_update_column {"column name"
id
    "column name"
    is_local_news
    "column name"
    is_top_stories
    "column name"
    location_semantic_id
    "column name"
    source_id
    "column name"
    title
    "column name"
    url
}

"update columns of table \"skills\""
enum skills_update_column {"column name"
id
    "column name"
    name
}

"update columns of table \"sources\""
enum sources_update_column {"column name"
id
    "column name"
    logo_url
    "column name"
    name
}

"update columns of table \"stories\""
enum stories_update_column {"column name"
author_id
    "column name"
    content
    "column name"
    description
    "column name"
    embedding
    "column name"
    guid
    "column name"
    id
    "column name"
    is_permalink
    "column name"
    publication_date
    "column name"
    rss_feed_id
    "column name"
    summary
    "column name"
    title
    "column name"
    url
    "column name"
    vector_representation
}

"update columns of table \"story_companies\""
enum story_companies_update_column {"column name"
company_id
    "column name"
    story_id
}

"update columns of table \"story_industries\""
enum story_industries_update_column {"column name"
industry_id
    "column name"
    story_id
}

"update columns of table \"story_locations\""
enum story_locations_update_column {"column name"
location_id
    "column name"
    story_id
}

"update columns of table \"story_people\""
enum story_people_update_column {"column name"
person_id
    "column name"
    story_id
}

"update columns of table \"story_skills\""
enum story_skills_update_column {"column name"
skill_id
    "column name"
    story_id
}

"update columns of table \"story_tags\""
enum story_tags_update_column {"column name"
story_id
    "column name"
    tag_id
}

"update columns of table \"story_thumbnails\""
enum story_thumbnails_update_column {"column name"
height
    "column name"
    id
    "column name"
    story_id
    "column name"
    url
    "column name"
    width
}

"update columns of table \"tag_companies\""
enum tag_companies_update_column {"column name"
company_id
    "column name"
    tag_id
}

"update columns of table \"tag_industries\""
enum tag_industries_update_column {"column name"
industry_id
    "column name"
    tag_id
}

"update columns of table \"tag_people\""
enum tag_people_update_column {"column name"
person_id
    "column name"
    tag_id
}

"update columns of table \"tag_rss_feeds\""
enum tag_rss_feeds_update_column {"column name"
rss_feed_id
    "column name"
    tag_id
}

"update columns of table \"tag_stories\""
enum tag_stories_update_column {"column name"
story_id
    "column name"
    tag_id
}

"update columns of table \"tags\""
enum tags_update_column {"column name"
id
    "column name"
    name
}

input authors_updates {"filter the rows which have to be updated"
where: authors_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: authors_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: authors_set_input
}

input companies_updates {"filter the rows which have to be updated"
where: companies_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: companies_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: companies_set_input
}

input industries_updates {"filter the rows which have to be updated"
where: industries_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: industries_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: industries_set_input
}

input locations_updates {"filter the rows which have to be updated"
where: locations_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: locations_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: locations_set_input
}

input people_updates {"filter the rows which have to be updated"
where: people_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: people_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: people_set_input
}

input rss_feeds_aggregate_bool_exp {bool_and: rss_feeds_aggregate_bool_exp_bool_and
    bool_or: rss_feeds_aggregate_bool_exp_bool_or
    count: rss_feeds_aggregate_bool_exp_count
}

input rss_feeds_aggregate_bool_exp_bool_and {arguments: rss_feeds_select_column_rss_feeds_aggregate_bool_exp_bool_and_arguments_columns!
    distinct: Boolean
    filter: rss_feeds_bool_exp
    predicate: Boolean_comparison_exp!
}

input rss_feeds_aggregate_bool_exp_bool_or {arguments: rss_feeds_select_column_rss_feeds_aggregate_bool_exp_bool_or_arguments_columns!
    distinct: Boolean
    filter: rss_feeds_bool_exp
    predicate: Boolean_comparison_exp!
}

input rss_feeds_aggregate_bool_exp_count {arguments: [rss_feeds_select_column!]
    distinct: Boolean
    filter: rss_feeds_bool_exp
    predicate: Int_comparison_exp!
}

input rss_feeds_updates {"filter the rows which have to be updated"
where: rss_feeds_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: rss_feeds_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: rss_feeds_set_input
}

input skills_updates {"filter the rows which have to be updated"
where: skills_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: skills_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: skills_set_input
}

input sources_updates {"filter the rows which have to be updated"
where: sources_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: sources_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: sources_set_input
}

input stories_aggregate_bool_exp {bool_and: stories_aggregate_bool_exp_bool_and
    bool_or: stories_aggregate_bool_exp_bool_or
    count: stories_aggregate_bool_exp_count
}

input stories_aggregate_bool_exp_bool_and {arguments: stories_select_column_stories_aggregate_bool_exp_bool_and_arguments_columns!
    distinct: Boolean
    filter: stories_bool_exp
    predicate: Boolean_comparison_exp!
}

input stories_aggregate_bool_exp_bool_or {arguments: stories_select_column_stories_aggregate_bool_exp_bool_or_arguments_columns!
    distinct: Boolean
    filter: stories_bool_exp
    predicate: Boolean_comparison_exp!
}

input stories_aggregate_bool_exp_count {arguments: [stories_select_column!]
    distinct: Boolean
    filter: stories_bool_exp
    predicate: Int_comparison_exp!
}

input stories_updates {"filter the rows which have to be updated"
where: stories_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: stories_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: stories_set_input
}

input story_companies_aggregate_bool_exp {count: story_companies_aggregate_bool_exp_count
}

input story_companies_aggregate_bool_exp_count {arguments: [story_companies_select_column!]
    distinct: Boolean
    filter: story_companies_bool_exp
    predicate: Int_comparison_exp!
}

input story_companies_updates {"filter the rows which have to be updated"
where: story_companies_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_companies_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_companies_set_input
}

input story_industries_aggregate_bool_exp {count: story_industries_aggregate_bool_exp_count
}

input story_industries_aggregate_bool_exp_count {arguments: [story_industries_select_column!]
    distinct: Boolean
    filter: story_industries_bool_exp
    predicate: Int_comparison_exp!
}

input story_industries_updates {"filter the rows which have to be updated"
where: story_industries_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_industries_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_industries_set_input
}

input story_locations_aggregate_bool_exp {count: story_locations_aggregate_bool_exp_count
}

input story_locations_aggregate_bool_exp_count {arguments: [story_locations_select_column!]
    distinct: Boolean
    filter: story_locations_bool_exp
    predicate: Int_comparison_exp!
}

input story_locations_updates {"filter the rows which have to be updated"
where: story_locations_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_locations_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_locations_set_input
}

input story_people_aggregate_bool_exp {count: story_people_aggregate_bool_exp_count
}

input story_people_aggregate_bool_exp_count {arguments: [story_people_select_column!]
    distinct: Boolean
    filter: story_people_bool_exp
    predicate: Int_comparison_exp!
}

input story_people_updates {"filter the rows which have to be updated"
where: story_people_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_people_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_people_set_input
}

input story_skills_aggregate_bool_exp {count: story_skills_aggregate_bool_exp_count
}

input story_skills_aggregate_bool_exp_count {arguments: [story_skills_select_column!]
    distinct: Boolean
    filter: story_skills_bool_exp
    predicate: Int_comparison_exp!
}

input story_skills_updates {"filter the rows which have to be updated"
where: story_skills_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_skills_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_skills_set_input
}

input story_tags_aggregate_bool_exp {count: story_tags_aggregate_bool_exp_count
}

input story_tags_aggregate_bool_exp_count {arguments: [story_tags_select_column!]
    distinct: Boolean
    filter: story_tags_bool_exp
    predicate: Int_comparison_exp!
}

input story_tags_updates {"filter the rows which have to be updated"
where: story_tags_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_tags_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_tags_set_input
}

input story_thumbnails_aggregate_bool_exp {count: story_thumbnails_aggregate_bool_exp_count
}

input story_thumbnails_aggregate_bool_exp_count {arguments: [story_thumbnails_select_column!]
    distinct: Boolean
    filter: story_thumbnails_bool_exp
    predicate: Int_comparison_exp!
}

input story_thumbnails_updates {"filter the rows which have to be updated"
where: story_thumbnails_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: story_thumbnails_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: story_thumbnails_set_input
}

input tag_companies_aggregate_bool_exp {count: tag_companies_aggregate_bool_exp_count
}

input tag_companies_aggregate_bool_exp_count {arguments: [tag_companies_select_column!]
    distinct: Boolean
    filter: tag_companies_bool_exp
    predicate: Int_comparison_exp!
}

input tag_companies_updates {"filter the rows which have to be updated"
where: tag_companies_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tag_companies_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tag_companies_set_input
}

input tag_industries_aggregate_bool_exp {count: tag_industries_aggregate_bool_exp_count
}

input tag_industries_aggregate_bool_exp_count {arguments: [tag_industries_select_column!]
    distinct: Boolean
    filter: tag_industries_bool_exp
    predicate: Int_comparison_exp!
}

input tag_industries_updates {"filter the rows which have to be updated"
where: tag_industries_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tag_industries_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tag_industries_set_input
}

input tag_people_aggregate_bool_exp {count: tag_people_aggregate_bool_exp_count
}

input tag_people_aggregate_bool_exp_count {arguments: [tag_people_select_column!]
    distinct: Boolean
    filter: tag_people_bool_exp
    predicate: Int_comparison_exp!
}

input tag_people_updates {"filter the rows which have to be updated"
where: tag_people_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tag_people_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tag_people_set_input
}

input tag_rss_feeds_aggregate_bool_exp {count: tag_rss_feeds_aggregate_bool_exp_count
}

input tag_rss_feeds_aggregate_bool_exp_count {arguments: [tag_rss_feeds_select_column!]
    distinct: Boolean
    filter: tag_rss_feeds_bool_exp
    predicate: Int_comparison_exp!
}

input tag_rss_feeds_updates {"filter the rows which have to be updated"
where: tag_rss_feeds_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tag_rss_feeds_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tag_rss_feeds_set_input
}

input tag_stories_aggregate_bool_exp {count: tag_stories_aggregate_bool_exp_count
}

input tag_stories_aggregate_bool_exp_count {arguments: [tag_stories_select_column!]
    distinct: Boolean
    filter: tag_stories_bool_exp
    predicate: Int_comparison_exp!
}

input tag_stories_updates {"filter the rows which have to be updated"
where: tag_stories_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tag_stories_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tag_stories_set_input
}

input tags_updates {"filter the rows which have to be updated"
where: tags_bool_exp!
    "increments the numeric columns with given value of the filtered values"
    _inc: tags_inc_input
    "sets the columns of the filtered rows to the given values"
    _set: tags_set_input
}

"Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'."
input Boolean_comparison_exp {_eq: Boolean
    _gt: Boolean
    _gte: Boolean
    _in: [Boolean!]
    _is_null: Boolean
    _lt: Boolean
    _lte: Boolean
    _neq: Boolean
    _nin: [Boolean!]
}

"Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'."
input Int_comparison_exp {_eq: Int
    _gt: Int
    _gte: Int
    _in: [Int!]
    _is_null: Boolean
    _lt: Int
    _lte: Int
    _neq: Int
    _nin: [Int!]
}

"Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'."
input String_comparison_exp {_eq: String
    _gt: String
    _gte: String
    _in: [String!]
    _is_null: Boolean
    _lt: String
    _lte: String
    _neq: String
    _nin: [String!]
    "does the column NOT match the given POSIX regular expression, case insensitive"
    _niregex: String
    "does the column NOT match the given POSIX regular expression, case sensitive"
    _nregex: String
    "does the column NOT match the given SQL regular expression"
    _nsimilar: String
    "does the column NOT match the given case-insensitive pattern"
    _nilike: String
    "does the column NOT match the given pattern"
    _nlike: String
    "does the column match the given POSIX regular expression, case insensitive"
    _iregex: String
    "does the column match the given POSIX regular expression, case sensitive"
    _regex: String
    "does the column match the given SQL regular expression"
    _similar: String
    "does the column match the given case-insensitive pattern"
    _ilike: String
    "does the column match the given pattern"
    _like: String
}

"Boolean expression to compare columns of type \"float8\". All fields are combined with logical 'AND'."
input float8_array_comparison_exp {_eq: [float8!]
    _gt: [float8!]
    _gte: [float8!]
    _in: [[float8!]!]
    _is_null: Boolean
    _lt: [float8!]
    _lte: [float8!]
    _neq: [float8!]
    _nin: [[float8!]!]
    "does the array contain the given value"
    _contains: [float8!]
    "is the array contained in the given array value"
    _contained_in: [float8!]
}

"Boolean expression to compare columns of type \"timestamp\". All fields are combined with logical 'AND'."
input timestamp_comparison_exp {_eq: timestamp
    _gt: timestamp
    _gte: timestamp
    _in: [timestamp!]
    _is_null: Boolean
    _lt: timestamp
    _lte: timestamp
    _neq: timestamp
    _nin: [timestamp!]
}

"Boolean expression to filter rows from the table \"authors\". All fields are combined with a logical 'AND'."
input authors_bool_exp {_and: [authors_bool_exp!]
    _not: authors_bool_exp
    _or: [authors_bool_exp!]
    bio: String_comparison_exp
    id: Int_comparison_exp
    name: String_comparison_exp
    photo_url: String_comparison_exp
    stories: stories_bool_exp
    stories_aggregate: stories_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"companies\". All fields are combined with a logical 'AND'."
input companies_bool_exp {_and: [companies_bool_exp!]
    _not: companies_bool_exp
    _or: [companies_bool_exp!]
    id: Int_comparison_exp
    name: String_comparison_exp
    story_companies: story_companies_bool_exp
    story_companies_aggregate: story_companies_aggregate_bool_exp
    tag_companies: tag_companies_bool_exp
    tag_companies_aggregate: tag_companies_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"industries\". All fields are combined with a logical 'AND'."
input industries_bool_exp {_and: [industries_bool_exp!]
    _not: industries_bool_exp
    _or: [industries_bool_exp!]
    id: Int_comparison_exp
    name: String_comparison_exp
    story_industries: story_industries_bool_exp
    story_industries_aggregate: story_industries_aggregate_bool_exp
    tag_industries: tag_industries_bool_exp
    tag_industries_aggregate: tag_industries_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"locations\". All fields are combined with a logical 'AND'."
input locations_bool_exp {_and: [locations_bool_exp!]
    _not: locations_bool_exp
    _or: [locations_bool_exp!]
    city: String_comparison_exp
    country: String_comparison_exp
    id: Int_comparison_exp
    name: String_comparison_exp
    semantic_id: String_comparison_exp
    state: String_comparison_exp
    story_locations: story_locations_bool_exp
    story_locations_aggregate: story_locations_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"people\". All fields are combined with a logical 'AND'."
input people_bool_exp {_and: [people_bool_exp!]
    _not: people_bool_exp
    _or: [people_bool_exp!]
    id: Int_comparison_exp
    name: String_comparison_exp
    story_people: story_people_bool_exp
    story_people_aggregate: story_people_aggregate_bool_exp
    tag_people: tag_people_bool_exp
    tag_people_aggregate: tag_people_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"rss_feeds\". All fields are combined with a logical 'AND'."
input rss_feeds_bool_exp {_and: [rss_feeds_bool_exp!]
    _not: rss_feeds_bool_exp
    _or: [rss_feeds_bool_exp!]
    id: Int_comparison_exp
    is_local_news: Boolean_comparison_exp
    is_top_stories: Boolean_comparison_exp
    location_semantic_id: String_comparison_exp
    source: sources_bool_exp
    source_id: Int_comparison_exp
    stories: stories_bool_exp
    stories_aggregate: stories_aggregate_bool_exp
    tag_rss_feeds: tag_rss_feeds_bool_exp
    tag_rss_feeds_aggregate: tag_rss_feeds_aggregate_bool_exp
    title: String_comparison_exp
    url: String_comparison_exp
}

"Boolean expression to filter rows from the table \"skills\". All fields are combined with a logical 'AND'."
input skills_bool_exp {_and: [skills_bool_exp!]
    _not: skills_bool_exp
    _or: [skills_bool_exp!]
    id: Int_comparison_exp
    name: String_comparison_exp
    story_skills: story_skills_bool_exp
    story_skills_aggregate: story_skills_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"sources\". All fields are combined with a logical 'AND'."
input sources_bool_exp {_and: [sources_bool_exp!]
    _not: sources_bool_exp
    _or: [sources_bool_exp!]
    id: Int_comparison_exp
    logo_url: String_comparison_exp
    name: String_comparison_exp
    rss_feeds: rss_feeds_bool_exp
    rss_feeds_aggregate: rss_feeds_aggregate_bool_exp
}

"Boolean expression to filter rows from the table \"stories\". All fields are combined with a logical 'AND'."
input stories_bool_exp {_and: [stories_bool_exp!]
    _not: stories_bool_exp
    _or: [stories_bool_exp!]
    author: authors_bool_exp
    author_id: Int_comparison_exp
    content: String_comparison_exp
    description: String_comparison_exp
    embedding: float8_array_comparison_exp
    guid: String_comparison_exp
    id: Int_comparison_exp
    is_permalink: Boolean_comparison_exp
    publication_date: timestamp_comparison_exp
    rss_feed: rss_feeds_bool_exp
    rss_feed_id: Int_comparison_exp
    story_companies: story_companies_bool_exp
    story_companies_aggregate: story_companies_aggregate_bool_exp
    story_industries: story_industries_bool_exp
    story_industries_aggregate: story_industries_aggregate_bool_exp
    story_locations: story_locations_bool_exp
    story_locations_aggregate: story_locations_aggregate_bool_exp
    story_people: story_people_bool_exp
    story_people_aggregate: story_people_aggregate_bool_exp
    story_skills: story_skills_bool_exp
    story_skills_aggregate: story_skills_aggregate_bool_exp
    story_tags: story_tags_bool_exp
    story_tags_aggregate: story_tags_aggregate_bool_exp
    story_thumbnails: story_thumbnails_bool_exp
    story_thumbnails_aggregate: story_thumbnails_aggregate_bool_exp
    summary: String_comparison_exp
    tag_stories: tag_stories_bool_exp
    tag_stories_aggregate: tag_stories_aggregate_bool_exp
    title: String_comparison_exp
    url: String_comparison_exp
    vector_representation: String_comparison_exp
}

"Boolean expression to filter rows from the table \"story_companies\". All fields are combined with a logical 'AND'."
input story_companies_bool_exp {_and: [story_companies_bool_exp!]
    _not: story_companies_bool_exp
    _or: [story_companies_bool_exp!]
    company: companies_bool_exp
    company_id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_industries\". All fields are combined with a logical 'AND'."
input story_industries_bool_exp {_and: [story_industries_bool_exp!]
    _not: story_industries_bool_exp
    _or: [story_industries_bool_exp!]
    industry: industries_bool_exp
    industry_id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_locations\". All fields are combined with a logical 'AND'."
input story_locations_bool_exp {_and: [story_locations_bool_exp!]
    _not: story_locations_bool_exp
    _or: [story_locations_bool_exp!]
    location: locations_bool_exp
    location_id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_people\". All fields are combined with a logical 'AND'."
input story_people_bool_exp {_and: [story_people_bool_exp!]
    _not: story_people_bool_exp
    _or: [story_people_bool_exp!]
    person: people_bool_exp
    person_id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_skills\". All fields are combined with a logical 'AND'."
input story_skills_bool_exp {_and: [story_skills_bool_exp!]
    _not: story_skills_bool_exp
    _or: [story_skills_bool_exp!]
    skill: skills_bool_exp
    skill_id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_tags\". All fields are combined with a logical 'AND'."
input story_tags_bool_exp {_and: [story_tags_bool_exp!]
    _not: story_tags_bool_exp
    _or: [story_tags_bool_exp!]
    story: stories_bool_exp
    story_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"story_thumbnails\". All fields are combined with a logical 'AND'."
input story_thumbnails_bool_exp {_and: [story_thumbnails_bool_exp!]
    _not: story_thumbnails_bool_exp
    _or: [story_thumbnails_bool_exp!]
    height: Int_comparison_exp
    id: Int_comparison_exp
    story: stories_bool_exp
    story_id: Int_comparison_exp
    url: String_comparison_exp
    width: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tag_companies\". All fields are combined with a logical 'AND'."
input tag_companies_bool_exp {_and: [tag_companies_bool_exp!]
    _not: tag_companies_bool_exp
    _or: [tag_companies_bool_exp!]
    company: companies_bool_exp
    company_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tag_industries\". All fields are combined with a logical 'AND'."
input tag_industries_bool_exp {_and: [tag_industries_bool_exp!]
    _not: tag_industries_bool_exp
    _or: [tag_industries_bool_exp!]
    industry: industries_bool_exp
    industry_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tag_people\". All fields are combined with a logical 'AND'."
input tag_people_bool_exp {_and: [tag_people_bool_exp!]
    _not: tag_people_bool_exp
    _or: [tag_people_bool_exp!]
    person: people_bool_exp
    person_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tag_rss_feeds\". All fields are combined with a logical 'AND'."
input tag_rss_feeds_bool_exp {_and: [tag_rss_feeds_bool_exp!]
    _not: tag_rss_feeds_bool_exp
    _or: [tag_rss_feeds_bool_exp!]
    rss_feed: rss_feeds_bool_exp
    rss_feed_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tag_stories\". All fields are combined with a logical 'AND'."
input tag_stories_bool_exp {_and: [tag_stories_bool_exp!]
    _not: tag_stories_bool_exp
    _or: [tag_stories_bool_exp!]
    story: stories_bool_exp
    story_id: Int_comparison_exp
    tag: tags_bool_exp
    tag_id: Int_comparison_exp
}

"Boolean expression to filter rows from the table \"tags\". All fields are combined with a logical 'AND'."
input tags_bool_exp {_and: [tags_bool_exp!]
    _not: tags_bool_exp
    _or: [tags_bool_exp!]
    id: Int_comparison_exp
    name: String_comparison_exp
    story_tags: story_tags_bool_exp
    story_tags_aggregate: story_tags_aggregate_bool_exp
    tag_companies: tag_companies_bool_exp
    tag_companies_aggregate: tag_companies_aggregate_bool_exp
    tag_industries: tag_industries_bool_exp
    tag_industries_aggregate: tag_industries_aggregate_bool_exp
    tag_people: tag_people_bool_exp
    tag_people_aggregate: tag_people_aggregate_bool_exp
    tag_rss_feeds: tag_rss_feeds_bool_exp
    tag_rss_feeds_aggregate: tag_rss_feeds_aggregate_bool_exp
    tag_stories: tag_stories_bool_exp
    tag_stories_aggregate: tag_stories_aggregate_bool_exp
}

"Initial value of the column from where the streaming should start"
input authors_stream_cursor_value_input {bio: String
    id: Int
    name: String
    photo_url: String
}

"Initial value of the column from where the streaming should start"
input companies_stream_cursor_value_input {id: Int
    name: String
}

"Initial value of the column from where the streaming should start"
input industries_stream_cursor_value_input {id: Int
    name: String
}

"Initial value of the column from where the streaming should start"
input locations_stream_cursor_value_input {city: String
    country: String
    id: Int
    name: String
    semantic_id: String
    state: String
}

"Initial value of the column from where the streaming should start"
input people_stream_cursor_value_input {id: Int
    name: String
}

"Initial value of the column from where the streaming should start"
input rss_feeds_stream_cursor_value_input {id: Int
    is_local_news: Boolean
    is_top_stories: Boolean
    location_semantic_id: String
    source_id: Int
    title: String
    url: String
}

"Initial value of the column from where the streaming should start"
input skills_stream_cursor_value_input {id: Int
    name: String
}

"Initial value of the column from where the streaming should start"
input sources_stream_cursor_value_input {id: Int
    logo_url: String
    name: String
}

"Initial value of the column from where the streaming should start"
input stories_stream_cursor_value_input {author_id: Int
    content: String
    description: String
    embedding: [float8!]
    guid: String
    id: Int
    is_permalink: Boolean
    publication_date: timestamp
    rss_feed_id: Int
    summary: String
    title: String
    url: String
    vector_representation: String
}

"Initial value of the column from where the streaming should start"
input story_companies_stream_cursor_value_input {company_id: Int
    story_id: Int
}

"Initial value of the column from where the streaming should start"
input story_industries_stream_cursor_value_input {industry_id: Int
    story_id: Int
}

"Initial value of the column from where the streaming should start"
input story_locations_stream_cursor_value_input {location_id: Int
    story_id: Int
}

"Initial value of the column from where the streaming should start"
input story_people_stream_cursor_value_input {person_id: Int
    story_id: Int
}

"Initial value of the column from where the streaming should start"
input story_skills_stream_cursor_value_input {skill_id: Int
    story_id: Int
}

"Initial value of the column from where the streaming should start"
input story_tags_stream_cursor_value_input {story_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input story_thumbnails_stream_cursor_value_input {height: Int
    id: Int
    story_id: Int
    url: String
    width: Int
}

"Initial value of the column from where the streaming should start"
input tag_companies_stream_cursor_value_input {company_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input tag_industries_stream_cursor_value_input {industry_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input tag_people_stream_cursor_value_input {person_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input tag_rss_feeds_stream_cursor_value_input {rss_feed_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input tag_stories_stream_cursor_value_input {story_id: Int
    tag_id: Int
}

"Initial value of the column from where the streaming should start"
input tags_stream_cursor_value_input {id: Int
    name: String
}

"Ordering options when selecting data from \"authors\"."
input authors_order_by {bio: order_by
    id: order_by
    name: order_by
    photo_url: order_by
    stories_aggregate: stories_aggregate_order_by
}

"Ordering options when selecting data from \"companies\"."
input companies_order_by {id: order_by
    name: order_by
    story_companies_aggregate: story_companies_aggregate_order_by
    tag_companies_aggregate: tag_companies_aggregate_order_by
}

"Ordering options when selecting data from \"industries\"."
input industries_order_by {id: order_by
    name: order_by
    story_industries_aggregate: story_industries_aggregate_order_by
    tag_industries_aggregate: tag_industries_aggregate_order_by
}

"Ordering options when selecting data from \"locations\"."
input locations_order_by {city: order_by
    country: order_by
    id: order_by
    name: order_by
    semantic_id: order_by
    state: order_by
    story_locations_aggregate: story_locations_aggregate_order_by
}

"Ordering options when selecting data from \"people\"."
input people_order_by {id: order_by
    name: order_by
    story_people_aggregate: story_people_aggregate_order_by
    tag_people_aggregate: tag_people_aggregate_order_by
}

"Ordering options when selecting data from \"rss_feeds\"."
input rss_feeds_order_by {id: order_by
    is_local_news: order_by
    is_top_stories: order_by
    location_semantic_id: order_by
    source: sources_order_by
    source_id: order_by
    stories_aggregate: stories_aggregate_order_by
    tag_rss_feeds_aggregate: tag_rss_feeds_aggregate_order_by
    title: order_by
    url: order_by
}

"Ordering options when selecting data from \"skills\"."
input skills_order_by {id: order_by
    name: order_by
    story_skills_aggregate: story_skills_aggregate_order_by
}

"Ordering options when selecting data from \"sources\"."
input sources_order_by {id: order_by
    logo_url: order_by
    name: order_by
    rss_feeds_aggregate: rss_feeds_aggregate_order_by
}

"Ordering options when selecting data from \"stories\"."
input stories_order_by {author: authors_order_by
    author_id: order_by
    content: order_by
    description: order_by
    embedding: order_by
    guid: order_by
    id: order_by
    is_permalink: order_by
    publication_date: order_by
    rss_feed: rss_feeds_order_by
    rss_feed_id: order_by
    story_companies_aggregate: story_companies_aggregate_order_by
    story_industries_aggregate: story_industries_aggregate_order_by
    story_locations_aggregate: story_locations_aggregate_order_by
    story_people_aggregate: story_people_aggregate_order_by
    story_skills_aggregate: story_skills_aggregate_order_by
    story_tags_aggregate: story_tags_aggregate_order_by
    story_thumbnails_aggregate: story_thumbnails_aggregate_order_by
    summary: order_by
    tag_stories_aggregate: tag_stories_aggregate_order_by
    title: order_by
    url: order_by
    vector_representation: order_by
}

"Ordering options when selecting data from \"story_companies\"."
input story_companies_order_by {company: companies_order_by
    company_id: order_by
    story: stories_order_by
    story_id: order_by
}

"Ordering options when selecting data from \"story_industries\"."
input story_industries_order_by {industry: industries_order_by
    industry_id: order_by
    story: stories_order_by
    story_id: order_by
}

"Ordering options when selecting data from \"story_locations\"."
input story_locations_order_by {location: locations_order_by
    location_id: order_by
    story: stories_order_by
    story_id: order_by
}

"Ordering options when selecting data from \"story_people\"."
input story_people_order_by {person: people_order_by
    person_id: order_by
    story: stories_order_by
    story_id: order_by
}

"Ordering options when selecting data from \"story_skills\"."
input story_skills_order_by {skill: skills_order_by
    skill_id: order_by
    story: stories_order_by
    story_id: order_by
}

"Ordering options when selecting data from \"story_tags\"."
input story_tags_order_by {story: stories_order_by
    story_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"story_thumbnails\"."
input story_thumbnails_order_by {height: order_by
    id: order_by
    story: stories_order_by
    story_id: order_by
    url: order_by
    width: order_by
}

"Ordering options when selecting data from \"tag_companies\"."
input tag_companies_order_by {company: companies_order_by
    company_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"tag_industries\"."
input tag_industries_order_by {industry: industries_order_by
    industry_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"tag_people\"."
input tag_people_order_by {person: people_order_by
    person_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"tag_rss_feeds\"."
input tag_rss_feeds_order_by {rss_feed: rss_feeds_order_by
    rss_feed_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"tag_stories\"."
input tag_stories_order_by {story: stories_order_by
    story_id: order_by
    tag: tags_order_by
    tag_id: order_by
}

"Ordering options when selecting data from \"tags\"."
input tags_order_by {id: order_by
    name: order_by
    story_tags_aggregate: story_tags_aggregate_order_by
    tag_companies_aggregate: tag_companies_aggregate_order_by
    tag_industries_aggregate: tag_industries_aggregate_order_by
    tag_people_aggregate: tag_people_aggregate_order_by
    tag_rss_feeds_aggregate: tag_rss_feeds_aggregate_order_by
    tag_stories_aggregate: tag_stories_aggregate_order_by
}

"Streaming cursor of the table \"authors\""
input authors_stream_cursor_input {"Stream column input with initial value"
initial_value: authors_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"companies\""
input companies_stream_cursor_input {"Stream column input with initial value"
initial_value: companies_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"industries\""
input industries_stream_cursor_input {"Stream column input with initial value"
initial_value: industries_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"locations\""
input locations_stream_cursor_input {"Stream column input with initial value"
initial_value: locations_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"people\""
input people_stream_cursor_input {"Stream column input with initial value"
initial_value: people_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"rss_feeds\""
input rss_feeds_stream_cursor_input {"Stream column input with initial value"
initial_value: rss_feeds_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"skills\""
input skills_stream_cursor_input {"Stream column input with initial value"
initial_value: skills_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"sources\""
input sources_stream_cursor_input {"Stream column input with initial value"
initial_value: sources_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"stories\""
input stories_stream_cursor_input {"Stream column input with initial value"
initial_value: stories_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_companies\""
input story_companies_stream_cursor_input {"Stream column input with initial value"
initial_value: story_companies_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_industries\""
input story_industries_stream_cursor_input {"Stream column input with initial value"
initial_value: story_industries_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_locations\""
input story_locations_stream_cursor_input {"Stream column input with initial value"
initial_value: story_locations_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_people\""
input story_people_stream_cursor_input {"Stream column input with initial value"
initial_value: story_people_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_skills\""
input story_skills_stream_cursor_input {"Stream column input with initial value"
initial_value: story_skills_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_tags\""
input story_tags_stream_cursor_input {"Stream column input with initial value"
initial_value: story_tags_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"story_thumbnails\""
input story_thumbnails_stream_cursor_input {"Stream column input with initial value"
initial_value: story_thumbnails_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tag_companies\""
input tag_companies_stream_cursor_input {"Stream column input with initial value"
initial_value: tag_companies_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tag_industries\""
input tag_industries_stream_cursor_input {"Stream column input with initial value"
initial_value: tag_industries_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tag_people\""
input tag_people_stream_cursor_input {"Stream column input with initial value"
initial_value: tag_people_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tag_rss_feeds\""
input tag_rss_feeds_stream_cursor_input {"Stream column input with initial value"
initial_value: tag_rss_feeds_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tag_stories\""
input tag_stories_stream_cursor_input {"Stream column input with initial value"
initial_value: tag_stories_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"Streaming cursor of the table \"tags\""
input tags_stream_cursor_input {"Stream column input with initial value"
initial_value: tags_stream_cursor_value_input!
    "cursor ordering"
    ordering: cursor_ordering
}

"input type for incrementing numeric columns in table \"authors\""
input authors_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"companies\""
input companies_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"industries\""
input industries_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"locations\""
input locations_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"people\""
input people_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"rss_feeds\""
input rss_feeds_inc_input {id: Int
    source_id: Int
}

"input type for incrementing numeric columns in table \"skills\""
input skills_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"sources\""
input sources_inc_input {id: Int
}

"input type for incrementing numeric columns in table \"stories\""
input stories_inc_input {author_id: Int
    id: Int
    rss_feed_id: Int
}

"input type for incrementing numeric columns in table \"story_companies\""
input story_companies_inc_input {company_id: Int
    story_id: Int
}

"input type for incrementing numeric columns in table \"story_industries\""
input story_industries_inc_input {industry_id: Int
    story_id: Int
}

"input type for incrementing numeric columns in table \"story_locations\""
input story_locations_inc_input {location_id: Int
    story_id: Int
}

"input type for incrementing numeric columns in table \"story_people\""
input story_people_inc_input {person_id: Int
    story_id: Int
}

"input type for incrementing numeric columns in table \"story_skills\""
input story_skills_inc_input {skill_id: Int
    story_id: Int
}

"input type for incrementing numeric columns in table \"story_tags\""
input story_tags_inc_input {story_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"story_thumbnails\""
input story_thumbnails_inc_input {height: Int
    id: Int
    story_id: Int
    width: Int
}

"input type for incrementing numeric columns in table \"tag_companies\""
input tag_companies_inc_input {company_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"tag_industries\""
input tag_industries_inc_input {industry_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"tag_people\""
input tag_people_inc_input {person_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"tag_rss_feeds\""
input tag_rss_feeds_inc_input {rss_feed_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"tag_stories\""
input tag_stories_inc_input {story_id: Int
    tag_id: Int
}

"input type for incrementing numeric columns in table \"tags\""
input tags_inc_input {id: Int
}

"input type for inserting array relation for remote table \"rss_feeds\""
input rss_feeds_arr_rel_insert_input {data: [rss_feeds_insert_input!]!
    "upsert condition"
    on_conflict: rss_feeds_on_conflict
}

"input type for inserting array relation for remote table \"stories\""
input stories_arr_rel_insert_input {data: [stories_insert_input!]!
    "upsert condition"
    on_conflict: stories_on_conflict
}

"input type for inserting array relation for remote table \"story_companies\""
input story_companies_arr_rel_insert_input {data: [story_companies_insert_input!]!
    "upsert condition"
    on_conflict: story_companies_on_conflict
}

"input type for inserting array relation for remote table \"story_industries\""
input story_industries_arr_rel_insert_input {data: [story_industries_insert_input!]!
    "upsert condition"
    on_conflict: story_industries_on_conflict
}

"input type for inserting array relation for remote table \"story_locations\""
input story_locations_arr_rel_insert_input {data: [story_locations_insert_input!]!
    "upsert condition"
    on_conflict: story_locations_on_conflict
}

"input type for inserting array relation for remote table \"story_people\""
input story_people_arr_rel_insert_input {data: [story_people_insert_input!]!
    "upsert condition"
    on_conflict: story_people_on_conflict
}

"input type for inserting array relation for remote table \"story_skills\""
input story_skills_arr_rel_insert_input {data: [story_skills_insert_input!]!
    "upsert condition"
    on_conflict: story_skills_on_conflict
}

"input type for inserting array relation for remote table \"story_tags\""
input story_tags_arr_rel_insert_input {data: [story_tags_insert_input!]!
    "upsert condition"
    on_conflict: story_tags_on_conflict
}

"input type for inserting array relation for remote table \"story_thumbnails\""
input story_thumbnails_arr_rel_insert_input {data: [story_thumbnails_insert_input!]!
    "upsert condition"
    on_conflict: story_thumbnails_on_conflict
}

"input type for inserting array relation for remote table \"tag_companies\""
input tag_companies_arr_rel_insert_input {data: [tag_companies_insert_input!]!
    "upsert condition"
    on_conflict: tag_companies_on_conflict
}

"input type for inserting array relation for remote table \"tag_industries\""
input tag_industries_arr_rel_insert_input {data: [tag_industries_insert_input!]!
    "upsert condition"
    on_conflict: tag_industries_on_conflict
}

"input type for inserting array relation for remote table \"tag_people\""
input tag_people_arr_rel_insert_input {data: [tag_people_insert_input!]!
    "upsert condition"
    on_conflict: tag_people_on_conflict
}

"input type for inserting array relation for remote table \"tag_rss_feeds\""
input tag_rss_feeds_arr_rel_insert_input {data: [tag_rss_feeds_insert_input!]!
    "upsert condition"
    on_conflict: tag_rss_feeds_on_conflict
}

"input type for inserting array relation for remote table \"tag_stories\""
input tag_stories_arr_rel_insert_input {data: [tag_stories_insert_input!]!
    "upsert condition"
    on_conflict: tag_stories_on_conflict
}

"input type for inserting data into table \"authors\""
input authors_insert_input {bio: String
    id: Int
    name: String
    photo_url: String
    stories: stories_arr_rel_insert_input
}

"input type for inserting data into table \"companies\""
input companies_insert_input {id: Int
    name: String
    story_companies: story_companies_arr_rel_insert_input
    tag_companies: tag_companies_arr_rel_insert_input
}

"input type for inserting data into table \"industries\""
input industries_insert_input {id: Int
    name: String
    story_industries: story_industries_arr_rel_insert_input
    tag_industries: tag_industries_arr_rel_insert_input
}

"input type for inserting data into table \"locations\""
input locations_insert_input {city: String
    country: String
    id: Int
    name: String
    semantic_id: String
    state: String
    story_locations: story_locations_arr_rel_insert_input
}

"input type for inserting data into table \"people\""
input people_insert_input {id: Int
    name: String
    story_people: story_people_arr_rel_insert_input
    tag_people: tag_people_arr_rel_insert_input
}

"input type for inserting data into table \"rss_feeds\""
input rss_feeds_insert_input {id: Int
    is_local_news: Boolean
    is_top_stories: Boolean
    location_semantic_id: String
    source: sources_obj_rel_insert_input
    source_id: Int
    stories: stories_arr_rel_insert_input
    tag_rss_feeds: tag_rss_feeds_arr_rel_insert_input
    title: String
    url: String
}

"input type for inserting data into table \"skills\""
input skills_insert_input {id: Int
    name: String
    story_skills: story_skills_arr_rel_insert_input
}

"input type for inserting data into table \"sources\""
input sources_insert_input {id: Int
    logo_url: String
    name: String
    rss_feeds: rss_feeds_arr_rel_insert_input
}

"input type for inserting data into table \"stories\""
input stories_insert_input {author: authors_obj_rel_insert_input
    author_id: Int
    content: String
    description: String
    embedding: [float8!]
    guid: String
    id: Int
    is_permalink: Boolean
    publication_date: timestamp
    rss_feed: rss_feeds_obj_rel_insert_input
    rss_feed_id: Int
    story_companies: story_companies_arr_rel_insert_input
    story_industries: story_industries_arr_rel_insert_input
    story_locations: story_locations_arr_rel_insert_input
    story_people: story_people_arr_rel_insert_input
    story_skills: story_skills_arr_rel_insert_input
    story_tags: story_tags_arr_rel_insert_input
    story_thumbnails: story_thumbnails_arr_rel_insert_input
    summary: String
    tag_stories: tag_stories_arr_rel_insert_input
    title: String
    url: String
    vector_representation: String
}

"input type for inserting data into table \"story_companies\""
input story_companies_insert_input {company: companies_obj_rel_insert_input
    company_id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
}

"input type for inserting data into table \"story_industries\""
input story_industries_insert_input {industry: industries_obj_rel_insert_input
    industry_id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
}

"input type for inserting data into table \"story_locations\""
input story_locations_insert_input {location: locations_obj_rel_insert_input
    location_id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
}

"input type for inserting data into table \"story_people\""
input story_people_insert_input {person: people_obj_rel_insert_input
    person_id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
}

"input type for inserting data into table \"story_skills\""
input story_skills_insert_input {skill: skills_obj_rel_insert_input
    skill_id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
}

"input type for inserting data into table \"story_tags\""
input story_tags_insert_input {story: stories_obj_rel_insert_input
    story_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"story_thumbnails\""
input story_thumbnails_insert_input {height: Int
    id: Int
    story: stories_obj_rel_insert_input
    story_id: Int
    url: String
    width: Int
}

"input type for inserting data into table \"tag_companies\""
input tag_companies_insert_input {company: companies_obj_rel_insert_input
    company_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"tag_industries\""
input tag_industries_insert_input {industry: industries_obj_rel_insert_input
    industry_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"tag_people\""
input tag_people_insert_input {person: people_obj_rel_insert_input
    person_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"tag_rss_feeds\""
input tag_rss_feeds_insert_input {rss_feed: rss_feeds_obj_rel_insert_input
    rss_feed_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"tag_stories\""
input tag_stories_insert_input {story: stories_obj_rel_insert_input
    story_id: Int
    tag: tags_obj_rel_insert_input
    tag_id: Int
}

"input type for inserting data into table \"tags\""
input tags_insert_input {id: Int
    name: String
    story_tags: story_tags_arr_rel_insert_input
    tag_companies: tag_companies_arr_rel_insert_input
    tag_industries: tag_industries_arr_rel_insert_input
    tag_people: tag_people_arr_rel_insert_input
    tag_rss_feeds: tag_rss_feeds_arr_rel_insert_input
    tag_stories: tag_stories_arr_rel_insert_input
}

"input type for inserting object relation for remote table \"authors\""
input authors_obj_rel_insert_input {data: authors_insert_input!
    "upsert condition"
    on_conflict: authors_on_conflict
}

"input type for inserting object relation for remote table \"companies\""
input companies_obj_rel_insert_input {data: companies_insert_input!
    "upsert condition"
    on_conflict: companies_on_conflict
}

"input type for inserting object relation for remote table \"industries\""
input industries_obj_rel_insert_input {data: industries_insert_input!
    "upsert condition"
    on_conflict: industries_on_conflict
}

"input type for inserting object relation for remote table \"locations\""
input locations_obj_rel_insert_input {data: locations_insert_input!
    "upsert condition"
    on_conflict: locations_on_conflict
}

"input type for inserting object relation for remote table \"people\""
input people_obj_rel_insert_input {data: people_insert_input!
    "upsert condition"
    on_conflict: people_on_conflict
}

"input type for inserting object relation for remote table \"rss_feeds\""
input rss_feeds_obj_rel_insert_input {data: rss_feeds_insert_input!
    "upsert condition"
    on_conflict: rss_feeds_on_conflict
}

"input type for inserting object relation for remote table \"skills\""
input skills_obj_rel_insert_input {data: skills_insert_input!
    "upsert condition"
    on_conflict: skills_on_conflict
}

"input type for inserting object relation for remote table \"sources\""
input sources_obj_rel_insert_input {data: sources_insert_input!
    "upsert condition"
    on_conflict: sources_on_conflict
}

"input type for inserting object relation for remote table \"stories\""
input stories_obj_rel_insert_input {data: stories_insert_input!
    "upsert condition"
    on_conflict: stories_on_conflict
}

"input type for inserting object relation for remote table \"tags\""
input tags_obj_rel_insert_input {data: tags_insert_input!
    "upsert condition"
    on_conflict: tags_on_conflict
}

"input type for updating data in table \"authors\""
input authors_set_input {bio: String
    id: Int
    name: String
    photo_url: String
}

"input type for updating data in table \"companies\""
input companies_set_input {id: Int
    name: String
}

"input type for updating data in table \"industries\""
input industries_set_input {id: Int
    name: String
}

"input type for updating data in table \"locations\""
input locations_set_input {city: String
    country: String
    id: Int
    name: String
    semantic_id: String
    state: String
}

"input type for updating data in table \"people\""
input people_set_input {id: Int
    name: String
}

"input type for updating data in table \"rss_feeds\""
input rss_feeds_set_input {id: Int
    is_local_news: Boolean
    is_top_stories: Boolean
    location_semantic_id: String
    source_id: Int
    title: String
    url: String
}

"input type for updating data in table \"skills\""
input skills_set_input {id: Int
    name: String
}

"input type for updating data in table \"sources\""
input sources_set_input {id: Int
    logo_url: String
    name: String
}

"input type for updating data in table \"stories\""
input stories_set_input {author_id: Int
    content: String
    description: String
    embedding: [float8!]
    guid: String
    id: Int
    is_permalink: Boolean
    publication_date: timestamp
    rss_feed_id: Int
    summary: String
    title: String
    url: String
    vector_representation: String
}

"input type for updating data in table \"story_companies\""
input story_companies_set_input {company_id: Int
    story_id: Int
}

"input type for updating data in table \"story_industries\""
input story_industries_set_input {industry_id: Int
    story_id: Int
}

"input type for updating data in table \"story_locations\""
input story_locations_set_input {location_id: Int
    story_id: Int
}

"input type for updating data in table \"story_people\""
input story_people_set_input {person_id: Int
    story_id: Int
}

"input type for updating data in table \"story_skills\""
input story_skills_set_input {skill_id: Int
    story_id: Int
}

"input type for updating data in table \"story_tags\""
input story_tags_set_input {story_id: Int
    tag_id: Int
}

"input type for updating data in table \"story_thumbnails\""
input story_thumbnails_set_input {height: Int
    id: Int
    story_id: Int
    url: String
    width: Int
}

"input type for updating data in table \"tag_companies\""
input tag_companies_set_input {company_id: Int
    tag_id: Int
}

"input type for updating data in table \"tag_industries\""
input tag_industries_set_input {industry_id: Int
    tag_id: Int
}

"input type for updating data in table \"tag_people\""
input tag_people_set_input {person_id: Int
    tag_id: Int
}

"input type for updating data in table \"tag_rss_feeds\""
input tag_rss_feeds_set_input {rss_feed_id: Int
    tag_id: Int
}

"input type for updating data in table \"tag_stories\""
input tag_stories_set_input {story_id: Int
    tag_id: Int
}

"input type for updating data in table \"tags\""
input tags_set_input {id: Int
    name: String
}

"on_conflict condition type for table \"authors\""
input authors_on_conflict {constraint: authors_constraint!
    update_columns: [authors_update_column!]! = []
    where: authors_bool_exp
}

"on_conflict condition type for table \"companies\""
input companies_on_conflict {constraint: companies_constraint!
    update_columns: [companies_update_column!]! = []
    where: companies_bool_exp
}

"on_conflict condition type for table \"industries\""
input industries_on_conflict {constraint: industries_constraint!
    update_columns: [industries_update_column!]! = []
    where: industries_bool_exp
}

"on_conflict condition type for table \"locations\""
input locations_on_conflict {constraint: locations_constraint!
    update_columns: [locations_update_column!]! = []
    where: locations_bool_exp
}

"on_conflict condition type for table \"people\""
input people_on_conflict {constraint: people_constraint!
    update_columns: [people_update_column!]! = []
    where: people_bool_exp
}

"on_conflict condition type for table \"rss_feeds\""
input rss_feeds_on_conflict {constraint: rss_feeds_constraint!
    update_columns: [rss_feeds_update_column!]! = []
    where: rss_feeds_bool_exp
}

"on_conflict condition type for table \"skills\""
input skills_on_conflict {constraint: skills_constraint!
    update_columns: [skills_update_column!]! = []
    where: skills_bool_exp
}

"on_conflict condition type for table \"sources\""
input sources_on_conflict {constraint: sources_constraint!
    update_columns: [sources_update_column!]! = []
    where: sources_bool_exp
}

"on_conflict condition type for table \"stories\""
input stories_on_conflict {constraint: stories_constraint!
    update_columns: [stories_update_column!]! = []
    where: stories_bool_exp
}

"on_conflict condition type for table \"story_companies\""
input story_companies_on_conflict {constraint: story_companies_constraint!
    update_columns: [story_companies_update_column!]! = []
    where: story_companies_bool_exp
}

"on_conflict condition type for table \"story_industries\""
input story_industries_on_conflict {constraint: story_industries_constraint!
    update_columns: [story_industries_update_column!]! = []
    where: story_industries_bool_exp
}

"on_conflict condition type for table \"story_locations\""
input story_locations_on_conflict {constraint: story_locations_constraint!
    update_columns: [story_locations_update_column!]! = []
    where: story_locations_bool_exp
}

"on_conflict condition type for table \"story_people\""
input story_people_on_conflict {constraint: story_people_constraint!
    update_columns: [story_people_update_column!]! = []
    where: story_people_bool_exp
}

"on_conflict condition type for table \"story_skills\""
input story_skills_on_conflict {constraint: story_skills_constraint!
    update_columns: [story_skills_update_column!]! = []
    where: story_skills_bool_exp
}

"on_conflict condition type for table \"story_tags\""
input story_tags_on_conflict {constraint: story_tags_constraint!
    update_columns: [story_tags_update_column!]! = []
    where: story_tags_bool_exp
}

"on_conflict condition type for table \"story_thumbnails\""
input story_thumbnails_on_conflict {constraint: story_thumbnails_constraint!
    update_columns: [story_thumbnails_update_column!]! = []
    where: story_thumbnails_bool_exp
}

"on_conflict condition type for table \"tag_companies\""
input tag_companies_on_conflict {constraint: tag_companies_constraint!
    update_columns: [tag_companies_update_column!]! = []
    where: tag_companies_bool_exp
}

"on_conflict condition type for table \"tag_industries\""
input tag_industries_on_conflict {constraint: tag_industries_constraint!
    update_columns: [tag_industries_update_column!]! = []
    where: tag_industries_bool_exp
}

"on_conflict condition type for table \"tag_people\""
input tag_people_on_conflict {constraint: tag_people_constraint!
    update_columns: [tag_people_update_column!]! = []
    where: tag_people_bool_exp
}

"on_conflict condition type for table \"tag_rss_feeds\""
input tag_rss_feeds_on_conflict {constraint: tag_rss_feeds_constraint!
    update_columns: [tag_rss_feeds_update_column!]! = []
    where: tag_rss_feeds_bool_exp
}

"on_conflict condition type for table \"tag_stories\""
input tag_stories_on_conflict {constraint: tag_stories_constraint!
    update_columns: [tag_stories_update_column!]! = []
    where: tag_stories_bool_exp
}

"on_conflict condition type for table \"tags\""
input tags_on_conflict {constraint: tags_constraint!
    update_columns: [tags_update_column!]! = []
    where: tags_bool_exp
}

"order by aggregate values of table \"rss_feeds\""
input rss_feeds_aggregate_order_by {avg: rss_feeds_avg_order_by
    count: order_by
    max: rss_feeds_max_order_by
    min: rss_feeds_min_order_by
    stddev: rss_feeds_stddev_order_by
    stddev_pop: rss_feeds_stddev_pop_order_by
    stddev_samp: rss_feeds_stddev_samp_order_by
    sum: rss_feeds_sum_order_by
    var_pop: rss_feeds_var_pop_order_by
    var_samp: rss_feeds_var_samp_order_by
    variance: rss_feeds_variance_order_by
}

"order by aggregate values of table \"stories\""
input stories_aggregate_order_by {avg: stories_avg_order_by
    count: order_by
    max: stories_max_order_by
    min: stories_min_order_by
    stddev: stories_stddev_order_by
    stddev_pop: stories_stddev_pop_order_by
    stddev_samp: stories_stddev_samp_order_by
    sum: stories_sum_order_by
    var_pop: stories_var_pop_order_by
    var_samp: stories_var_samp_order_by
    variance: stories_variance_order_by
}

"order by aggregate values of table \"story_companies\""
input story_companies_aggregate_order_by {avg: story_companies_avg_order_by
    count: order_by
    max: story_companies_max_order_by
    min: story_companies_min_order_by
    stddev: story_companies_stddev_order_by
    stddev_pop: story_companies_stddev_pop_order_by
    stddev_samp: story_companies_stddev_samp_order_by
    sum: story_companies_sum_order_by
    var_pop: story_companies_var_pop_order_by
    var_samp: story_companies_var_samp_order_by
    variance: story_companies_variance_order_by
}

"order by aggregate values of table \"story_industries\""
input story_industries_aggregate_order_by {avg: story_industries_avg_order_by
    count: order_by
    max: story_industries_max_order_by
    min: story_industries_min_order_by
    stddev: story_industries_stddev_order_by
    stddev_pop: story_industries_stddev_pop_order_by
    stddev_samp: story_industries_stddev_samp_order_by
    sum: story_industries_sum_order_by
    var_pop: story_industries_var_pop_order_by
    var_samp: story_industries_var_samp_order_by
    variance: story_industries_variance_order_by
}

"order by aggregate values of table \"story_locations\""
input story_locations_aggregate_order_by {avg: story_locations_avg_order_by
    count: order_by
    max: story_locations_max_order_by
    min: story_locations_min_order_by
    stddev: story_locations_stddev_order_by
    stddev_pop: story_locations_stddev_pop_order_by
    stddev_samp: story_locations_stddev_samp_order_by
    sum: story_locations_sum_order_by
    var_pop: story_locations_var_pop_order_by
    var_samp: story_locations_var_samp_order_by
    variance: story_locations_variance_order_by
}

"order by aggregate values of table \"story_people\""
input story_people_aggregate_order_by {avg: story_people_avg_order_by
    count: order_by
    max: story_people_max_order_by
    min: story_people_min_order_by
    stddev: story_people_stddev_order_by
    stddev_pop: story_people_stddev_pop_order_by
    stddev_samp: story_people_stddev_samp_order_by
    sum: story_people_sum_order_by
    var_pop: story_people_var_pop_order_by
    var_samp: story_people_var_samp_order_by
    variance: story_people_variance_order_by
}

"order by aggregate values of table \"story_skills\""
input story_skills_aggregate_order_by {avg: story_skills_avg_order_by
    count: order_by
    max: story_skills_max_order_by
    min: story_skills_min_order_by
    stddev: story_skills_stddev_order_by
    stddev_pop: story_skills_stddev_pop_order_by
    stddev_samp: story_skills_stddev_samp_order_by
    sum: story_skills_sum_order_by
    var_pop: story_skills_var_pop_order_by
    var_samp: story_skills_var_samp_order_by
    variance: story_skills_variance_order_by
}

"order by aggregate values of table \"story_tags\""
input story_tags_aggregate_order_by {avg: story_tags_avg_order_by
    count: order_by
    max: story_tags_max_order_by
    min: story_tags_min_order_by
    stddev: story_tags_stddev_order_by
    stddev_pop: story_tags_stddev_pop_order_by
    stddev_samp: story_tags_stddev_samp_order_by
    sum: story_tags_sum_order_by
    var_pop: story_tags_var_pop_order_by
    var_samp: story_tags_var_samp_order_by
    variance: story_tags_variance_order_by
}

"order by aggregate values of table \"story_thumbnails\""
input story_thumbnails_aggregate_order_by {avg: story_thumbnails_avg_order_by
    count: order_by
    max: story_thumbnails_max_order_by
    min: story_thumbnails_min_order_by
    stddev: story_thumbnails_stddev_order_by
    stddev_pop: story_thumbnails_stddev_pop_order_by
    stddev_samp: story_thumbnails_stddev_samp_order_by
    sum: story_thumbnails_sum_order_by
    var_pop: story_thumbnails_var_pop_order_by
    var_samp: story_thumbnails_var_samp_order_by
    variance: story_thumbnails_variance_order_by
}

"order by aggregate values of table \"tag_companies\""
input tag_companies_aggregate_order_by {avg: tag_companies_avg_order_by
    count: order_by
    max: tag_companies_max_order_by
    min: tag_companies_min_order_by
    stddev: tag_companies_stddev_order_by
    stddev_pop: tag_companies_stddev_pop_order_by
    stddev_samp: tag_companies_stddev_samp_order_by
    sum: tag_companies_sum_order_by
    var_pop: tag_companies_var_pop_order_by
    var_samp: tag_companies_var_samp_order_by
    variance: tag_companies_variance_order_by
}

"order by aggregate values of table \"tag_industries\""
input tag_industries_aggregate_order_by {avg: tag_industries_avg_order_by
    count: order_by
    max: tag_industries_max_order_by
    min: tag_industries_min_order_by
    stddev: tag_industries_stddev_order_by
    stddev_pop: tag_industries_stddev_pop_order_by
    stddev_samp: tag_industries_stddev_samp_order_by
    sum: tag_industries_sum_order_by
    var_pop: tag_industries_var_pop_order_by
    var_samp: tag_industries_var_samp_order_by
    variance: tag_industries_variance_order_by
}

"order by aggregate values of table \"tag_people\""
input tag_people_aggregate_order_by {avg: tag_people_avg_order_by
    count: order_by
    max: tag_people_max_order_by
    min: tag_people_min_order_by
    stddev: tag_people_stddev_order_by
    stddev_pop: tag_people_stddev_pop_order_by
    stddev_samp: tag_people_stddev_samp_order_by
    sum: tag_people_sum_order_by
    var_pop: tag_people_var_pop_order_by
    var_samp: tag_people_var_samp_order_by
    variance: tag_people_variance_order_by
}

"order by aggregate values of table \"tag_rss_feeds\""
input tag_rss_feeds_aggregate_order_by {avg: tag_rss_feeds_avg_order_by
    count: order_by
    max: tag_rss_feeds_max_order_by
    min: tag_rss_feeds_min_order_by
    stddev: tag_rss_feeds_stddev_order_by
    stddev_pop: tag_rss_feeds_stddev_pop_order_by
    stddev_samp: tag_rss_feeds_stddev_samp_order_by
    sum: tag_rss_feeds_sum_order_by
    var_pop: tag_rss_feeds_var_pop_order_by
    var_samp: tag_rss_feeds_var_samp_order_by
    variance: tag_rss_feeds_variance_order_by
}

"order by aggregate values of table \"tag_stories\""
input tag_stories_aggregate_order_by {avg: tag_stories_avg_order_by
    count: order_by
    max: tag_stories_max_order_by
    min: tag_stories_min_order_by
    stddev: tag_stories_stddev_order_by
    stddev_pop: tag_stories_stddev_pop_order_by
    stddev_samp: tag_stories_stddev_samp_order_by
    sum: tag_stories_sum_order_by
    var_pop: tag_stories_var_pop_order_by
    var_samp: tag_stories_var_samp_order_by
    variance: tag_stories_variance_order_by
}

"order by avg() on columns of table \"rss_feeds\""
input rss_feeds_avg_order_by {id: order_by
    source_id: order_by
}

"order by avg() on columns of table \"stories\""
input stories_avg_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by avg() on columns of table \"story_companies\""
input story_companies_avg_order_by {company_id: order_by
    story_id: order_by
}

"order by avg() on columns of table \"story_industries\""
input story_industries_avg_order_by {industry_id: order_by
    story_id: order_by
}

"order by avg() on columns of table \"story_locations\""
input story_locations_avg_order_by {location_id: order_by
    story_id: order_by
}

"order by avg() on columns of table \"story_people\""
input story_people_avg_order_by {person_id: order_by
    story_id: order_by
}

"order by avg() on columns of table \"story_skills\""
input story_skills_avg_order_by {skill_id: order_by
    story_id: order_by
}

"order by avg() on columns of table \"story_tags\""
input story_tags_avg_order_by {story_id: order_by
    tag_id: order_by
}

"order by avg() on columns of table \"story_thumbnails\""
input story_thumbnails_avg_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by avg() on columns of table \"tag_companies\""
input tag_companies_avg_order_by {company_id: order_by
    tag_id: order_by
}

"order by avg() on columns of table \"tag_industries\""
input tag_industries_avg_order_by {industry_id: order_by
    tag_id: order_by
}

"order by avg() on columns of table \"tag_people\""
input tag_people_avg_order_by {person_id: order_by
    tag_id: order_by
}

"order by avg() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_avg_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by avg() on columns of table \"tag_stories\""
input tag_stories_avg_order_by {story_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"rss_feeds\""
input rss_feeds_max_order_by {id: order_by
    location_semantic_id: order_by
    source_id: order_by
    title: order_by
    url: order_by
}

"order by max() on columns of table \"stories\""
input stories_max_order_by {author_id: order_by
    content: order_by
    description: order_by
    embedding: order_by
    guid: order_by
    id: order_by
    publication_date: order_by
    rss_feed_id: order_by
    summary: order_by
    title: order_by
    url: order_by
    vector_representation: order_by
}

"order by max() on columns of table \"story_companies\""
input story_companies_max_order_by {company_id: order_by
    story_id: order_by
}

"order by max() on columns of table \"story_industries\""
input story_industries_max_order_by {industry_id: order_by
    story_id: order_by
}

"order by max() on columns of table \"story_locations\""
input story_locations_max_order_by {location_id: order_by
    story_id: order_by
}

"order by max() on columns of table \"story_people\""
input story_people_max_order_by {person_id: order_by
    story_id: order_by
}

"order by max() on columns of table \"story_skills\""
input story_skills_max_order_by {skill_id: order_by
    story_id: order_by
}

"order by max() on columns of table \"story_tags\""
input story_tags_max_order_by {story_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"story_thumbnails\""
input story_thumbnails_max_order_by {height: order_by
    id: order_by
    story_id: order_by
    url: order_by
    width: order_by
}

"order by max() on columns of table \"tag_companies\""
input tag_companies_max_order_by {company_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"tag_industries\""
input tag_industries_max_order_by {industry_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"tag_people\""
input tag_people_max_order_by {person_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_max_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by max() on columns of table \"tag_stories\""
input tag_stories_max_order_by {story_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"rss_feeds\""
input rss_feeds_min_order_by {id: order_by
    location_semantic_id: order_by
    source_id: order_by
    title: order_by
    url: order_by
}

"order by min() on columns of table \"stories\""
input stories_min_order_by {author_id: order_by
    content: order_by
    description: order_by
    embedding: order_by
    guid: order_by
    id: order_by
    publication_date: order_by
    rss_feed_id: order_by
    summary: order_by
    title: order_by
    url: order_by
    vector_representation: order_by
}

"order by min() on columns of table \"story_companies\""
input story_companies_min_order_by {company_id: order_by
    story_id: order_by
}

"order by min() on columns of table \"story_industries\""
input story_industries_min_order_by {industry_id: order_by
    story_id: order_by
}

"order by min() on columns of table \"story_locations\""
input story_locations_min_order_by {location_id: order_by
    story_id: order_by
}

"order by min() on columns of table \"story_people\""
input story_people_min_order_by {person_id: order_by
    story_id: order_by
}

"order by min() on columns of table \"story_skills\""
input story_skills_min_order_by {skill_id: order_by
    story_id: order_by
}

"order by min() on columns of table \"story_tags\""
input story_tags_min_order_by {story_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"story_thumbnails\""
input story_thumbnails_min_order_by {height: order_by
    id: order_by
    story_id: order_by
    url: order_by
    width: order_by
}

"order by min() on columns of table \"tag_companies\""
input tag_companies_min_order_by {company_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"tag_industries\""
input tag_industries_min_order_by {industry_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"tag_people\""
input tag_people_min_order_by {person_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_min_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by min() on columns of table \"tag_stories\""
input tag_stories_min_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"rss_feeds\""
input rss_feeds_stddev_order_by {id: order_by
    source_id: order_by
}

"order by stddev() on columns of table \"stories\""
input stories_stddev_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by stddev() on columns of table \"story_companies\""
input story_companies_stddev_order_by {company_id: order_by
    story_id: order_by
}

"order by stddev() on columns of table \"story_industries\""
input story_industries_stddev_order_by {industry_id: order_by
    story_id: order_by
}

"order by stddev() on columns of table \"story_locations\""
input story_locations_stddev_order_by {location_id: order_by
    story_id: order_by
}

"order by stddev() on columns of table \"story_people\""
input story_people_stddev_order_by {person_id: order_by
    story_id: order_by
}

"order by stddev() on columns of table \"story_skills\""
input story_skills_stddev_order_by {skill_id: order_by
    story_id: order_by
}

"order by stddev() on columns of table \"story_tags\""
input story_tags_stddev_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"story_thumbnails\""
input story_thumbnails_stddev_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by stddev() on columns of table \"tag_companies\""
input tag_companies_stddev_order_by {company_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"tag_industries\""
input tag_industries_stddev_order_by {industry_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"tag_people\""
input tag_people_stddev_order_by {person_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_stddev_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by stddev() on columns of table \"tag_stories\""
input tag_stories_stddev_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"rss_feeds\""
input rss_feeds_stddev_pop_order_by {id: order_by
    source_id: order_by
}

"order by stddev_pop() on columns of table \"stories\""
input stories_stddev_pop_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by stddev_pop() on columns of table \"story_companies\""
input story_companies_stddev_pop_order_by {company_id: order_by
    story_id: order_by
}

"order by stddev_pop() on columns of table \"story_industries\""
input story_industries_stddev_pop_order_by {industry_id: order_by
    story_id: order_by
}

"order by stddev_pop() on columns of table \"story_locations\""
input story_locations_stddev_pop_order_by {location_id: order_by
    story_id: order_by
}

"order by stddev_pop() on columns of table \"story_people\""
input story_people_stddev_pop_order_by {person_id: order_by
    story_id: order_by
}

"order by stddev_pop() on columns of table \"story_skills\""
input story_skills_stddev_pop_order_by {skill_id: order_by
    story_id: order_by
}

"order by stddev_pop() on columns of table \"story_tags\""
input story_tags_stddev_pop_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"story_thumbnails\""
input story_thumbnails_stddev_pop_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by stddev_pop() on columns of table \"tag_companies\""
input tag_companies_stddev_pop_order_by {company_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"tag_industries\""
input tag_industries_stddev_pop_order_by {industry_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"tag_people\""
input tag_people_stddev_pop_order_by {person_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_stddev_pop_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by stddev_pop() on columns of table \"tag_stories\""
input tag_stories_stddev_pop_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"rss_feeds\""
input rss_feeds_stddev_samp_order_by {id: order_by
    source_id: order_by
}

"order by stddev_samp() on columns of table \"stories\""
input stories_stddev_samp_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by stddev_samp() on columns of table \"story_companies\""
input story_companies_stddev_samp_order_by {company_id: order_by
    story_id: order_by
}

"order by stddev_samp() on columns of table \"story_industries\""
input story_industries_stddev_samp_order_by {industry_id: order_by
    story_id: order_by
}

"order by stddev_samp() on columns of table \"story_locations\""
input story_locations_stddev_samp_order_by {location_id: order_by
    story_id: order_by
}

"order by stddev_samp() on columns of table \"story_people\""
input story_people_stddev_samp_order_by {person_id: order_by
    story_id: order_by
}

"order by stddev_samp() on columns of table \"story_skills\""
input story_skills_stddev_samp_order_by {skill_id: order_by
    story_id: order_by
}

"order by stddev_samp() on columns of table \"story_tags\""
input story_tags_stddev_samp_order_by {story_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"story_thumbnails\""
input story_thumbnails_stddev_samp_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by stddev_samp() on columns of table \"tag_companies\""
input tag_companies_stddev_samp_order_by {company_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"tag_industries\""
input tag_industries_stddev_samp_order_by {industry_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"tag_people\""
input tag_people_stddev_samp_order_by {person_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_stddev_samp_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by stddev_samp() on columns of table \"tag_stories\""
input tag_stories_stddev_samp_order_by {story_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"rss_feeds\""
input rss_feeds_sum_order_by {id: order_by
    source_id: order_by
}

"order by sum() on columns of table \"stories\""
input stories_sum_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by sum() on columns of table \"story_companies\""
input story_companies_sum_order_by {company_id: order_by
    story_id: order_by
}

"order by sum() on columns of table \"story_industries\""
input story_industries_sum_order_by {industry_id: order_by
    story_id: order_by
}

"order by sum() on columns of table \"story_locations\""
input story_locations_sum_order_by {location_id: order_by
    story_id: order_by
}

"order by sum() on columns of table \"story_people\""
input story_people_sum_order_by {person_id: order_by
    story_id: order_by
}

"order by sum() on columns of table \"story_skills\""
input story_skills_sum_order_by {skill_id: order_by
    story_id: order_by
}

"order by sum() on columns of table \"story_tags\""
input story_tags_sum_order_by {story_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"story_thumbnails\""
input story_thumbnails_sum_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by sum() on columns of table \"tag_companies\""
input tag_companies_sum_order_by {company_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"tag_industries\""
input tag_industries_sum_order_by {industry_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"tag_people\""
input tag_people_sum_order_by {person_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_sum_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by sum() on columns of table \"tag_stories\""
input tag_stories_sum_order_by {story_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"rss_feeds\""
input rss_feeds_var_pop_order_by {id: order_by
    source_id: order_by
}

"order by var_pop() on columns of table \"stories\""
input stories_var_pop_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by var_pop() on columns of table \"story_companies\""
input story_companies_var_pop_order_by {company_id: order_by
    story_id: order_by
}

"order by var_pop() on columns of table \"story_industries\""
input story_industries_var_pop_order_by {industry_id: order_by
    story_id: order_by
}

"order by var_pop() on columns of table \"story_locations\""
input story_locations_var_pop_order_by {location_id: order_by
    story_id: order_by
}

"order by var_pop() on columns of table \"story_people\""
input story_people_var_pop_order_by {person_id: order_by
    story_id: order_by
}

"order by var_pop() on columns of table \"story_skills\""
input story_skills_var_pop_order_by {skill_id: order_by
    story_id: order_by
}

"order by var_pop() on columns of table \"story_tags\""
input story_tags_var_pop_order_by {story_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"story_thumbnails\""
input story_thumbnails_var_pop_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by var_pop() on columns of table \"tag_companies\""
input tag_companies_var_pop_order_by {company_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"tag_industries\""
input tag_industries_var_pop_order_by {industry_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"tag_people\""
input tag_people_var_pop_order_by {person_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_var_pop_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by var_pop() on columns of table \"tag_stories\""
input tag_stories_var_pop_order_by {story_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"rss_feeds\""
input rss_feeds_var_samp_order_by {id: order_by
    source_id: order_by
}

"order by var_samp() on columns of table \"stories\""
input stories_var_samp_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by var_samp() on columns of table \"story_companies\""
input story_companies_var_samp_order_by {company_id: order_by
    story_id: order_by
}

"order by var_samp() on columns of table \"story_industries\""
input story_industries_var_samp_order_by {industry_id: order_by
    story_id: order_by
}

"order by var_samp() on columns of table \"story_locations\""
input story_locations_var_samp_order_by {location_id: order_by
    story_id: order_by
}

"order by var_samp() on columns of table \"story_people\""
input story_people_var_samp_order_by {person_id: order_by
    story_id: order_by
}

"order by var_samp() on columns of table \"story_skills\""
input story_skills_var_samp_order_by {skill_id: order_by
    story_id: order_by
}

"order by var_samp() on columns of table \"story_tags\""
input story_tags_var_samp_order_by {story_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"story_thumbnails\""
input story_thumbnails_var_samp_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by var_samp() on columns of table \"tag_companies\""
input tag_companies_var_samp_order_by {company_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"tag_industries\""
input tag_industries_var_samp_order_by {industry_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"tag_people\""
input tag_people_var_samp_order_by {person_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_var_samp_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by var_samp() on columns of table \"tag_stories\""
input tag_stories_var_samp_order_by {story_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"rss_feeds\""
input rss_feeds_variance_order_by {id: order_by
    source_id: order_by
}

"order by variance() on columns of table \"stories\""
input stories_variance_order_by {author_id: order_by
    id: order_by
    rss_feed_id: order_by
}

"order by variance() on columns of table \"story_companies\""
input story_companies_variance_order_by {company_id: order_by
    story_id: order_by
}

"order by variance() on columns of table \"story_industries\""
input story_industries_variance_order_by {industry_id: order_by
    story_id: order_by
}

"order by variance() on columns of table \"story_locations\""
input story_locations_variance_order_by {location_id: order_by
    story_id: order_by
}

"order by variance() on columns of table \"story_people\""
input story_people_variance_order_by {person_id: order_by
    story_id: order_by
}

"order by variance() on columns of table \"story_skills\""
input story_skills_variance_order_by {skill_id: order_by
    story_id: order_by
}

"order by variance() on columns of table \"story_tags\""
input story_tags_variance_order_by {story_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"story_thumbnails\""
input story_thumbnails_variance_order_by {height: order_by
    id: order_by
    story_id: order_by
    width: order_by
}

"order by variance() on columns of table \"tag_companies\""
input tag_companies_variance_order_by {company_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"tag_industries\""
input tag_industries_variance_order_by {industry_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"tag_people\""
input tag_people_variance_order_by {person_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"tag_rss_feeds\""
input tag_rss_feeds_variance_order_by {rss_feed_id: order_by
    tag_id: order_by
}

"order by variance() on columns of table \"tag_stories\""
input tag_stories_variance_order_by {story_id: order_by
    tag_id: order_by
}

"primary key columns input for table: authors"
input authors_pk_columns_input {id: Int!
}

"primary key columns input for table: companies"
input companies_pk_columns_input {id: Int!
}

"primary key columns input for table: industries"
input industries_pk_columns_input {id: Int!
}

"primary key columns input for table: locations"
input locations_pk_columns_input {id: Int!
}

"primary key columns input for table: people"
input people_pk_columns_input {id: Int!
}

"primary key columns input for table: rss_feeds"
input rss_feeds_pk_columns_input {id: Int!
}

"primary key columns input for table: skills"
input skills_pk_columns_input {id: Int!
}

"primary key columns input for table: sources"
input sources_pk_columns_input {id: Int!
}

"primary key columns input for table: stories"
input stories_pk_columns_input {id: Int!
}

"primary key columns input for table: story_companies"
input story_companies_pk_columns_input {company_id: Int!
    story_id: Int!
}

"primary key columns input for table: story_industries"
input story_industries_pk_columns_input {industry_id: Int!
    story_id: Int!
}

"primary key columns input for table: story_locations"
input story_locations_pk_columns_input {location_id: Int!
    story_id: Int!
}

"primary key columns input for table: story_people"
input story_people_pk_columns_input {person_id: Int!
    story_id: Int!
}

"primary key columns input for table: story_skills"
input story_skills_pk_columns_input {skill_id: Int!
    story_id: Int!
}

"primary key columns input for table: story_tags"
input story_tags_pk_columns_input {story_id: Int!
    tag_id: Int!
}

"primary key columns input for table: story_thumbnails"
input story_thumbnails_pk_columns_input {id: Int!
}

"primary key columns input for table: tag_companies"
input tag_companies_pk_columns_input {company_id: Int!
    tag_id: Int!
}

"primary key columns input for table: tag_industries"
input tag_industries_pk_columns_input {industry_id: Int!
    tag_id: Int!
}

"primary key columns input for table: tag_people"
input tag_people_pk_columns_input {person_id: Int!
    tag_id: Int!
}

"primary key columns input for table: tag_rss_feeds"
input tag_rss_feeds_pk_columns_input {rss_feed_id: Int!
    tag_id: Int!
}

"primary key columns input for table: tag_stories"
input tag_stories_pk_columns_input {story_id: Int!
    tag_id: Int!
}

"primary key columns input for table: tags"
input tags_pk_columns_input {id: Int!
}